{"ast":null,"code":"var _jsxFileName = \"E:\\\\ClubSync\\\\frontend\\\\src\\\\students\\\\UpcomingEvents.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/students/UpcomingEvents.js\nimport React, { useState, useEffect, useContext /* or useSelector if using Redux */ } from 'react';\nimport axios from 'axios';\nimport styles from './UpcomingEvents.module.css';\n// Added FaSpinner, FaCheckCircle, FaTimesCircle, FaEyeSlash (optional for button state)\nimport { FaCalendarAlt, FaClock, FaMapMarkerAlt, FaUniversity, FaInfoCircle, FaSearch, FaFilter, FaUserCheck, FaExclamationCircle, FaEye, FaTimes, FaSpinner, FaCheckCircle, FaTimesCircle, FaEyeSlash } from 'react-icons/fa';\nimport { BeatLoader } from 'react-spinners'; // Keep BeatLoader or replace spinner logic\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UpcomingEvents() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedClub, setSelectedClub] = useState('');\n  const [allClubs, setAllClubs] = useState([]);\n  const [registrationStatus, setRegistrationStatus] = useState({});\n\n  // --- State for Registered Events Modal ---\n  const [showRegisteredEvents, setShowRegisteredEvents] = useState(false);\n  const [registeredEvents, setRegisteredEvents] = useState([]);\n  const [loadingRegistered, setLoadingRegistered] = useState(false);\n  const [registeredError, setRegisteredError] = useState(null);\n  // --- End State for Registered Events Modal ---\n\n  // --- Get Logged-in Student Info ---\n  const getStudentIdentifierFromStorage = () => {\n    try {\n      const storedId = localStorage.getItem('studentId'); // Looking for 'studentId'\n\n      if (storedId) {\n        const idAsNumber = parseInt(storedId, 10);\n        if (!isNaN(idAsNumber)) {\n          console.log(\"Parsed numeric student ID from storage:\", idAsNumber);\n          return idAsNumber;\n        } else {\n          console.warn(\"Stored student ID is not a number, returning null. Value:\", storedId); // Changed log level\n          return null;\n        }\n      } else {\n        console.warn(\"No 'studentId' found in localStorage.\"); // Changed log level\n        return null;\n      }\n    } catch (e) {\n      console.error(\"Error reading student info from localStorage\", e);\n    }\n    return null;\n  };\n  const loggedInStudentIdentifier = getStudentIdentifierFromStorage();\n\n  // --- Check Authentication on Mount (Optional but Recommended) ---\n  useEffect(() => {\n    if (!loggedInStudentIdentifier) {\n      console.warn(\"UpcomingEvents: No logged-in student identifier found from storage. Registration might fail.\");\n      // Optionally set an error or redirect here if login is strictly required to view\n    } else {\n      console.log(\"UpcomingEvents: Logged-in student identifier found from storage:\", loggedInStudentIdentifier);\n    }\n  }, [loggedInStudentIdentifier]); // Dependency array is correct\n\n  // --- Fetch Approved Events ---\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    axios.get('http://localhost:3001/api/student/events/upcoming', {\n      withCredentials: true\n    }).then(response => {\n      // Ensure event_date is valid before sorting\n      const sortedEvents = response.data.filter(event => !isNaN(new Date(event.event_date).getTime())) // Filter out invalid dates\n      .sort((a, b) => new Date(a.event_date) - new Date(b.event_date));\n      setEvents(sortedEvents);\n      setFilteredEvents(sortedEvents);\n      const clubs = [...new Set(sortedEvents.map(event => event.club_name))].filter(Boolean); // Filter out null/empty club names\n      setAllClubs(clubs.sort());\n    }).catch(err => {\n      console.error(\"Error fetching upcoming events:\", err);\n      if (err.response) {\n        console.error(\"Error data:\", err.response.data);\n        console.error(\"Error status:\", err.response.status);\n        if (err.response.status === 401) {\n          setError(\"Authentication required. Please log in to view events.\");\n          console.log(\"Received 401, potentially session expired or invalid cookie.\");\n          // Consider redirecting to login page here\n        } else {\n          setError(err.response.data.message || `Error fetching data (Status: ${err.response.status})`);\n        }\n      } else if (err.request) {\n        console.error(\"Error request:\", err.request);\n        setError(\"Network Error: Could not connect to the server. Please check your connection and if the server is running.\");\n      } else {\n        console.error('Error message:', err.message);\n        setError(`An unexpected error occurred: ${err.message}`);\n      }\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []); // Empty dependency array means run once on mount\n\n  // --- Filter Events based on Search and Club Selection ---\n  useEffect(() => {\n    let currentEvents = [...events];\n    const searchTermLower = searchTerm.trim().toLowerCase();\n    const clubFilterActive = !!selectedClub; // Check if a club is actually selected\n\n    if (searchTermLower) {\n      currentEvents = currentEvents.filter(event => event.eid && event.eid.toLowerCase().includes(searchTermLower) ||\n      // Check EID\n      event.event_name && event.event_name.toLowerCase().includes(searchTermLower) // Also check Event Name\n      // Add more fields to search if needed (e.g., event.event_details)\n      );\n    }\n    if (clubFilterActive) {\n      currentEvents = currentEvents.filter(event => event.club_name === selectedClub);\n    }\n    setFilteredEvents(currentEvents);\n  }, [searchTerm, selectedClub, events]); // Re-run when search, filter, or base events change\n\n  // --- Handle Event Registration ---\n  const handleRegister = (eventId, eventName) => {\n    if (!loggedInStudentIdentifier) {\n      setError(\"Please log in to register for events.\"); // Show error centrally or use alert\n      // alert('Could not identify student. Please ensure you are logged in.');\n      return;\n    }\n    const confirmation = window.confirm(`Confirm registration for \"${eventName}\"?`);\n    if (confirmation) {\n      // Indicate loading specifically for this event\n      setRegistrationStatus(prev => ({\n        ...prev,\n        [eventId]: {\n          loading: true,\n          message: null,\n          error: false,\n          success: false\n        }\n      }));\n      axios.post(`http://localhost:3001/api/student/events/register/${eventId}`, {},\n      // Empty body, data sent via session/cookie\n      {\n        withCredentials: true\n      }).then(response => {\n        console.log('Registration successful/status:', response.data);\n        const message = response.data.message || 'Registration successful!';\n        const isAlreadyRegistered = response.data.alreadyRegistered || false;\n\n        // Update status: success\n        setRegistrationStatus(prev => ({\n          ...prev,\n          [eventId]: {\n            loading: false,\n            success: true,\n            message: message\n          }\n        }));\n\n        // Update the main event list's registration status visually *immediately*\n        // Only add student ID if they weren't already marked as registered by the backend response\n        if (!isAlreadyRegistered) {\n          setEvents(prevEvents => prevEvents.map(event => {\n            if (event._id === eventId) {\n              // Ensure reg_std is an array, initialize if not\n              const currentRegStd = Array.isArray(event.reg_std) ? event.reg_std : [];\n              // Add student if not already present (double check)\n              const updatedRegStd = currentRegStd.includes(loggedInStudentIdentifier) ? currentRegStd : [...currentRegStd, loggedInStudentIdentifier];\n              return {\n                ...event,\n                reg_std: updatedRegStd\n              };\n            }\n            return event;\n          }));\n        } else {\n          // If already registered, ensure the frontend state reflects this too\n          setEvents(prevEvents => prevEvents.map(event => {\n            if (event._id === eventId) {\n              const currentRegStd = Array.isArray(event.reg_std) ? event.reg_std : [];\n              // Ensure the student ID is in the array if the backend says they are registered\n              const updatedRegStd = currentRegStd.includes(loggedInStudentIdentifier) ? currentRegStd : [...currentRegStd, loggedInStudentIdentifier];\n              return {\n                ...event,\n                reg_std: updatedRegStd\n              };\n            }\n            return event;\n          }));\n        }\n\n        // If the registered events modal is open, refresh its data\n        if (showRegisteredEvents) {\n          fetchRegisteredEvents(); // Re-fetch to show the newly registered event\n        }\n\n        // Clear the success message after a delay\n        setTimeout(() => {\n          setRegistrationStatus(prev => ({\n            ...prev,\n            [eventId]: undefined\n          }));\n        }, 5000); // 5 seconds\n      }).catch(err => {\n        console.error(\"Error registering for event:\", eventId, err);\n        let errorMessage = 'Registration failed. Please try again.';\n        if (err.response) {\n          console.error(\"Registration Error data:\", err.response.data);\n          console.error(\"Registration Error status:\", err.response.status);\n          if (err.response.status === 401) {\n            errorMessage = \"Authentication failed. Please log in again.\";\n            setError(\"Authentication failed during registration. Please log in again.\"); // Show global error too\n          } else if (err.response.status === 400) {\n            // Example: Bad Request (e.g., event full, not open)\n            errorMessage = err.response.data.message || \"Cannot register for this event (e.g., event full or closed).\";\n          } else if (err.response.status === 404) {\n            // Example: Not Found\n            errorMessage = \"Event not found.\";\n          } else if (err.response.status === 409) {\n            // Example: Conflict (already registered)\n            errorMessage = err.response.data.message || \"You are already registered for this event.\";\n            // Ensure frontend state reflects \"registered\" if backend confirms it\n            setEvents(prevEvents => prevEvents.map(event => {\n              if (event._id === eventId) {\n                const currentRegStd = Array.isArray(event.reg_std) ? event.reg_std : [];\n                const updatedRegStd = currentRegStd.includes(loggedInStudentIdentifier) ? currentRegStd : [...currentRegStd, loggedInStudentIdentifier];\n                return {\n                  ...event,\n                  reg_std: updatedRegStd\n                };\n              }\n              return event;\n            }));\n          } else {\n            errorMessage = err.response.data.message || `Registration error (Status: ${err.response.status}).`;\n          }\n        } else if (err.request) {\n          errorMessage = \"Network error during registration. Please check connection.\";\n        } else {\n          errorMessage = `An unexpected error occurred: ${err.message}`;\n        }\n\n        // Update status: error\n        setRegistrationStatus(prev => ({\n          ...prev,\n          [eventId]: {\n            loading: false,\n            error: true,\n            message: errorMessage\n          }\n        }));\n\n        // Clear the error message after a longer delay\n        setTimeout(() => {\n          setRegistrationStatus(prev => ({\n            ...prev,\n            [eventId]: undefined\n          }));\n        }, 7000); // 7 seconds\n      });\n    } else {\n      console.log(\"Registration cancelled by user.\");\n    }\n  };\n\n  // --- Fetch Registered Events ---\n  const fetchRegisteredEvents = async () => {\n    if (!loggedInStudentIdentifier) {\n      setRegisteredError(\"Authentication required to view registered events.\");\n      setRegisteredEvents([]); // Clear previous data if logged out\n      return;\n    }\n    setLoadingRegistered(true);\n    setRegisteredError(null);\n    try {\n      const response = await axios.get('http://localhost:3001/api/student/events/registered', {\n        withCredentials: true\n      });\n      // Sort registered events by date as well\n      const sortedRegistered = response.data.filter(event => !isNaN(new Date(event.event_date).getTime())).sort((a, b) => new Date(a.event_date) - new Date(b.event_date));\n      setRegisteredEvents(sortedRegistered);\n      console.log(\"Fetched and sorted registered events:\", sortedRegistered);\n    } catch (err) {\n      console.error(\"Error fetching registered events:\", err);\n      let errorMessage = 'Failed to fetch registered events.';\n      if (err.response) {\n        console.error(\"Fetch Registered Error Status:\", err.response.status);\n        if (err.response.status === 401) {\n          errorMessage = \"Authentication failed. Please log in again.\";\n          // Optionally clear local storage / redirect\n        } else {\n          errorMessage = err.response.data.message || `Error (Status: ${err.response.status})`;\n        }\n      } else if (err.request) {\n        errorMessage = \"Network Error: Could not connect to server.\";\n      } else {\n        errorMessage = `An unexpected error occurred: ${err.message}`;\n      }\n      setRegisteredError(errorMessage);\n      setRegisteredEvents([]); // Clear data on error\n    } finally {\n      setLoadingRegistered(false);\n    }\n  };\n\n  // --- Handle View Registered Button Click ---\n  const handleViewRegisteredClick = () => {\n    // Always fetch the latest when the button is clicked to open the modal\n    if (!showRegisteredEvents) {\n      fetchRegisteredEvents();\n    }\n    setShowRegisteredEvents(true); // Show the modal\n  };\n  const closeModal = () => {\n    setShowRegisteredEvents(false);\n    setRegisteredError(null); // Clear modal-specific errors when closing\n    // Don't clear registeredEvents data immediately, it might be useful if reopened quickly\n  };\n\n  // --- Helper formatDateTime ---\n  const formatDateTime = (dateString, timeSlots) => {\n    try {\n      const date = new Date(dateString);\n      // Check if date is valid\n      if (isNaN(date.getTime())) {\n        return \"Invalid Date\";\n      }\n      const formattedDate = date.toLocaleDateString('en-GB', {\n        // Use en-GB for DD/MM/YYYY or en-US for MM/DD/YYYY\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        weekday: 'short'\n      });\n      const formattedTime = Array.isArray(timeSlots) && timeSlots.length > 0 ? timeSlots.join(' / ') : 'Time TBC'; // TBC = To Be Confirmed\n      return `${formattedDate} ・ ${formattedTime}`; // Use a separator like '・'\n    } catch (e) {\n      console.error(\"Error formatting date/time:\", dateString, timeSlots, e);\n      return \"Date/Time Error\";\n    }\n  };\n\n  // --- JSX Rendering ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.upcomingEventsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.pageTitle,\n      children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), \" Upcoming Events\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this), error && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.globalError,\n      children: [/*#__PURE__*/_jsxDEV(FaExclamationCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 21\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.controls,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.controlGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"eventSearch\",\n          className: styles.controlLabel,\n          children: [/*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 82\n          }, this), \" Search\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputIconWrapper,\n          children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n            className: styles.inputIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"eventSearch\",\n            type: \"text\",\n            placeholder: \"Search by Event ID or Name...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            className: styles.inputField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.controlGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"clubFilter\",\n          className: styles.controlLabel,\n          children: [/*#__PURE__*/_jsxDEV(FaFilter, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 81\n          }, this), \" Filter by Club\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputIconWrapper,\n          children: [/*#__PURE__*/_jsxDEV(FaUniversity, {\n            className: styles.inputIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"clubFilter\",\n            value: selectedClub,\n            onChange: e => setSelectedClub(e.target.value),\n            className: styles.selectField // Use a different class if needed\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Clubs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 25\n            }, this), allClubs.map(club => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: club,\n              children: club\n            }, club, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this), loggedInStudentIdentifier &&\n      /*#__PURE__*/\n      // Only show if logged in\n      _jsxDEV(\"div\", {\n        className: `${styles.controlGroup} ${styles.viewRegisteredButtonGroup}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.viewRegisteredButton,\n          onClick: handleViewRegisteredClick,\n          disabled: loadingRegistered // Disable while modal data is loading\n          ,\n          children: loadingRegistered ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FaSpinner, {\n              className: styles.spinner\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 33\n            }, this), \" Loading...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FaEye, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 33\n            }, this), \" My Registrations\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }, this), !loggedInStudentIdentifier && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loginPrompt,\n        children: [\" \", /*#__PURE__*/_jsxDEV(FaInfoCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 25\n        }, this), \" Log in to register for events and view your registrations.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contentArea,\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.centeredMessage,\n        children: [/*#__PURE__*/_jsxDEV(BeatLoader, {\n          color: \"var(--primary-color, #007bff)\",\n          loading: loading,\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading Events...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }, this), !loading && !error && filteredEvents.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.centeredMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: events.length === 0 ? \"No Upcoming Events\" : \"No Events Match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: events.length === 0 ? \"Check back later for new events.\" : \"Try adjusting your search or filter.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }, this), !loading && !error && filteredEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.eventsGrid,\n        children: filteredEvents.map(event => {\n          // Ensure event._id exists before proceeding\n          if (!event || !event._id) {\n            console.warn(\"Skipping rendering event due to missing _id:\", event);\n            return null; // Skip rendering this invalid event data\n          }\n\n          // Check registration status robustly\n          const isRegistered = loggedInStudentIdentifier && Array.isArray(event.reg_std) && event.reg_std.includes(loggedInStudentIdentifier);\n          const regInfo = registrationStatus[event._id]; // Contains loading, success, error, message\n          const canRegister = event.std_reg === 'Yes'; // Check if registration is open for the event\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.eventCard} ${isRegistered ? styles.eventCardRegistered : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.cardHeader,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: styles.eventName,\n                children: event.event_name || 'Unnamed Event'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.eventEid,\n                children: [/*#__PURE__*/_jsxDEV(FaInfoCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 75\n                }, this), \" \", event.eid || 'No ID']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.cardBody,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.eventMeta,\n                children: [/*#__PURE__*/_jsxDEV(FaUniversity, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Club:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 51\n                  }, this), \" \", event.club_name || 'N/A']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.eventMeta,\n                children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: formatDateTime(event.event_date, event.time_slots)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.eventMeta,\n                children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Location:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 47\n                  }, this), \" \", event.room_number ? ` ${event.room_number}` : 'Location TBD']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 37\n              }, this), event.event_details && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.eventDetails,\n                children: [event.event_details.substring(0, 120), event.event_details.length > 120 ? '...' : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.cardFooter,\n              children: [canRegister && loggedInStudentIdentifier &&\n              /*#__PURE__*/\n              // Show button only if reg is 'Yes' and user is logged in\n              _jsxDEV(\"div\", {\n                className: styles.registrationArea,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `${styles.registerButton} ${isRegistered ? styles.registered : styles.notRegistered} ${regInfo !== null && regInfo !== void 0 && regInfo.loading ? styles.loading : ''} ${regInfo !== null && regInfo !== void 0 && regInfo.success ? styles.successFlash : ''} ${regInfo !== null && regInfo !== void 0 && regInfo.error ? styles.errorFlash : ''}`,\n                  onClick: () => !isRegistered && !(regInfo !== null && regInfo !== void 0 && regInfo.loading) && handleRegister(event._id, event.event_name),\n                  disabled: isRegistered || (regInfo === null || regInfo === void 0 ? void 0 : regInfo.loading) // Disable if registered OR currently loading\n                  ,\n                  title: isRegistered ? \"You are registered for this event\" : `Register for ${event.event_name}`,\n                  children: regInfo !== null && regInfo !== void 0 && regInfo.loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(FaSpinner, {\n                      className: styles.spinner\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 55\n                    }, this), \" Processing...\"]\n                  }, void 0, true) : isRegistered ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(FaUserCheck, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 55\n                    }, this), \" Registered\"]\n                  }, void 0, true) : 'Register Now'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.regStatusMessage,\n                  children: [(regInfo === null || regInfo === void 0 ? void 0 : regInfo.success) && !(regInfo !== null && regInfo !== void 0 && regInfo.loading) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: styles.regSuccess,\n                    children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 131\n                    }, this), \" \", regInfo.message]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 95\n                  }, this), (regInfo === null || regInfo === void 0 ? void 0 : regInfo.error) && !(regInfo !== null && regInfo !== void 0 && regInfo.loading) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: styles.regError,\n                    children: [/*#__PURE__*/_jsxDEV(FaTimesCircle, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 492,\n                      columnNumber: 127\n                    }, this), \" \", regInfo.message]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 93\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 41\n              }, this), canRegister && !loggedInStudentIdentifier &&\n              /*#__PURE__*/\n              // Show prompt if reg is 'Yes' but user not logged in\n              _jsxDEV(\"div\", {\n                className: styles.loginToRegisterPrompt,\n                children: [/*#__PURE__*/_jsxDEV(FaInfoCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 49\n                }, this), \" Log in to register\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 45\n              }, this), !canRegister &&\n              /*#__PURE__*/\n              // Show message if registration is not available ('No' or other value)\n              _jsxDEV(\"div\", {\n                className: styles.noRegistration,\n                children: [/*#__PURE__*/_jsxDEV(FaEyeSlash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 45\n                }, this), \" Registration not required or unavailable\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 33\n            }, this)]\n          }, event._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 9\n    }, this), \" \", showRegisteredEvents &&\n    /*#__PURE__*/\n    // Use the closeModal function on overlay click\n    _jsxDEV(\"div\", {\n      className: styles.modalOverlay,\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.modalContent,\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.modalCloseButton,\n          onClick: closeModal,\n          \"aria-label\": \"Close modal\",\n          children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.modalTitle,\n          children: [/*#__PURE__*/_jsxDEV(FaUserCheck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 55\n          }, this), \" Your Registered Events\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 21\n        }, this), loadingRegistered && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.centeredMessage,\n          children: [/*#__PURE__*/_jsxDEV(BeatLoader, {\n            color: \"var(--primary-color, #007bff)\",\n            size: 15\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading your registrations...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 25\n        }, this), registeredError && !loadingRegistered && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.centeredMessage} ${styles.modalError}`,\n          children: [/*#__PURE__*/_jsxDEV(FaExclamationCircle, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: registeredError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 25\n        }, this), !loadingRegistered && !registeredError && registeredEvents.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.centeredMessage,\n          children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {\n            size: 30,\n            style: {\n              marginBottom: '10px',\n              color: '#aaa'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You haven't registered for any upcoming events yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 29\n        }, this), !loadingRegistered && !registeredError && registeredEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: styles.registeredEventsList,\n          children: registeredEvents.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: styles.registeredEventItem,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              className: styles.registeredEventName,\n              children: event.event_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(FaUniversity, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 40\n              }, this), \" \", event.club_name || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 40\n              }, this), \" \", formatDateTime(event.event_date, event.time_slots)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 44\n              }, this), \" \", event.room_number ? `Room ${event.room_number}` : 'Location TBD']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.registeredEventEid,\n              children: [/*#__PURE__*/_jsxDEV(FaInfoCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 85\n              }, this), \" EID: \", event.eid || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 41\n            }, this)]\n          }, event._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n}\n_s(UpcomingEvents, \"IC5HOirUMBpGoN3xI2BHKTZzwGc=\");\n_c = UpcomingEvents;\nexport default UpcomingEvents;\nvar _c;\n$RefreshReg$(_c, \"UpcomingEvents\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","styles","FaCalendarAlt","FaClock","FaMapMarkerAlt","FaUniversity","FaInfoCircle","FaSearch","FaFilter","FaUserCheck","FaExclamationCircle","FaEye","FaTimes","FaSpinner","FaCheckCircle","FaTimesCircle","FaEyeSlash","BeatLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","UpcomingEvents","_s","events","setEvents","filteredEvents","setFilteredEvents","loading","setLoading","error","setError","searchTerm","setSearchTerm","selectedClub","setSelectedClub","allClubs","setAllClubs","registrationStatus","setRegistrationStatus","showRegisteredEvents","setShowRegisteredEvents","registeredEvents","setRegisteredEvents","loadingRegistered","setLoadingRegistered","registeredError","setRegisteredError","getStudentIdentifierFromStorage","storedId","localStorage","getItem","idAsNumber","parseInt","isNaN","console","log","warn","e","loggedInStudentIdentifier","get","withCredentials","then","response","sortedEvents","data","filter","event","Date","event_date","getTime","sort","a","b","clubs","Set","map","club_name","Boolean","catch","err","status","message","request","finally","currentEvents","searchTermLower","trim","toLowerCase","clubFilterActive","eid","includes","event_name","handleRegister","eventId","eventName","confirmation","window","confirm","prev","success","post","isAlreadyRegistered","alreadyRegistered","prevEvents","_id","currentRegStd","Array","isArray","reg_std","updatedRegStd","fetchRegisteredEvents","setTimeout","undefined","errorMessage","sortedRegistered","handleViewRegisteredClick","closeModal","formatDateTime","dateString","timeSlots","date","formattedDate","toLocaleDateString","year","month","day","weekday","formattedTime","length","join","className","upcomingEventsContainer","children","pageTitle","fileName","_jsxFileName","lineNumber","columnNumber","globalError","controls","controlGroup","htmlFor","controlLabel","inputIconWrapper","inputIcon","id","type","placeholder","value","onChange","target","inputField","selectField","club","viewRegisteredButtonGroup","viewRegisteredButton","onClick","disabled","spinner","loginPrompt","contentArea","centeredMessage","color","size","eventsGrid","isRegistered","regInfo","canRegister","std_reg","eventCard","eventCardRegistered","cardHeader","eventEid","cardBody","eventMeta","time_slots","room_number","event_details","eventDetails","substring","cardFooter","registrationArea","registerButton","registered","notRegistered","successFlash","errorFlash","title","regStatusMessage","regSuccess","regError","loginToRegisterPrompt","noRegistration","modalOverlay","modalContent","stopPropagation","modalCloseButton","modalTitle","modalError","style","marginBottom","registeredEventsList","registeredEventItem","registeredEventName","registeredEventEid","_c","$RefreshReg$"],"sources":["E:/ClubSync/frontend/src/students/UpcomingEvents.jsx"],"sourcesContent":["// frontend/src/students/UpcomingEvents.js\r\nimport React, { useState, useEffect, useContext /* or useSelector if using Redux */ } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './UpcomingEvents.module.css';\r\n// Added FaSpinner, FaCheckCircle, FaTimesCircle, FaEyeSlash (optional for button state)\r\nimport {\r\nFaCalendarAlt, FaClock, FaMapMarkerAlt, FaUniversity, FaInfoCircle, FaSearch,\r\nFaFilter, FaUserCheck, FaExclamationCircle, FaEye, FaTimes, FaSpinner, FaCheckCircle, FaTimesCircle, FaEyeSlash\r\n} from 'react-icons/fa';\r\nimport { BeatLoader } from 'react-spinners'; // Keep BeatLoader or replace spinner logic\r\n\r\nfunction UpcomingEvents() {\r\nconst [events, setEvents] = useState([]);\r\nconst [filteredEvents, setFilteredEvents] = useState([]);\r\nconst [loading, setLoading] = useState(true);\r\nconst [error, setError] = useState(null);\r\nconst [searchTerm, setSearchTerm] = useState('');\r\nconst [selectedClub, setSelectedClub] = useState('');\r\nconst [allClubs, setAllClubs] = useState([]);\r\nconst [registrationStatus, setRegistrationStatus] = useState({});\r\n\r\n// --- State for Registered Events Modal ---\r\nconst [showRegisteredEvents, setShowRegisteredEvents] = useState(false);\r\nconst [registeredEvents, setRegisteredEvents] = useState([]);\r\nconst [loadingRegistered, setLoadingRegistered] = useState(false);\r\nconst [registeredError, setRegisteredError] = useState(null);\r\n// --- End State for Registered Events Modal ---\r\n\r\n\r\n// --- Get Logged-in Student Info ---\r\nconst getStudentIdentifierFromStorage = () => {\r\n    try {\r\n        const storedId = localStorage.getItem('studentId'); // Looking for 'studentId'\r\n\r\n        if (storedId) {\r\n            const idAsNumber = parseInt(storedId, 10);\r\n            if (!isNaN(idAsNumber)) {\r\n                console.log(\"Parsed numeric student ID from storage:\", idAsNumber);\r\n                return idAsNumber;\r\n            } else {\r\n                console.warn(\"Stored student ID is not a number, returning null. Value:\", storedId); // Changed log level\r\n                return null;\r\n            }\r\n        } else {\r\n                console.warn(\"No 'studentId' found in localStorage.\"); // Changed log level\r\n                return null;\r\n        }\r\n    } catch (e) {\r\n        console.error(\"Error reading student info from localStorage\", e);\r\n    }\r\n    return null;\r\n};\r\n\r\nconst loggedInStudentIdentifier = getStudentIdentifierFromStorage();\r\n\r\n// --- Check Authentication on Mount (Optional but Recommended) ---\r\nuseEffect(() => {\r\n    if (!loggedInStudentIdentifier) {\r\n        console.warn(\"UpcomingEvents: No logged-in student identifier found from storage. Registration might fail.\");\r\n        // Optionally set an error or redirect here if login is strictly required to view\r\n    } else {\r\n        console.log(\"UpcomingEvents: Logged-in student identifier found from storage:\", loggedInStudentIdentifier);\r\n    }\r\n}, [loggedInStudentIdentifier]); // Dependency array is correct\r\n\r\n// --- Fetch Approved Events ---\r\nuseEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    axios.get('http://localhost:3001/api/student/events/upcoming', { withCredentials: true })\r\n        .then(response => {\r\n            // Ensure event_date is valid before sorting\r\n            const sortedEvents = response.data\r\n                .filter(event => !isNaN(new Date(event.event_date).getTime())) // Filter out invalid dates\r\n                .sort((a, b) => new Date(a.event_date) - new Date(b.event_date));\r\n\r\n            setEvents(sortedEvents);\r\n            setFilteredEvents(sortedEvents);\r\n            const clubs = [...new Set(sortedEvents.map(event => event.club_name))].filter(Boolean); // Filter out null/empty club names\r\n            setAllClubs(clubs.sort());\r\n        })\r\n        .catch(err => {\r\n            console.error(\"Error fetching upcoming events:\", err);\r\n            if (err.response) {\r\n                console.error(\"Error data:\", err.response.data);\r\n                console.error(\"Error status:\", err.response.status);\r\n                if (err.response.status === 401) {\r\n                    setError(\"Authentication required. Please log in to view events.\");\r\n                    console.log(\"Received 401, potentially session expired or invalid cookie.\");\r\n                    // Consider redirecting to login page here\r\n                } else {\r\n                    setError(err.response.data.message || `Error fetching data (Status: ${err.response.status})`);\r\n                }\r\n            } else if (err.request) {\r\n                console.error(\"Error request:\", err.request);\r\n                setError(\"Network Error: Could not connect to the server. Please check your connection and if the server is running.\");\r\n            } else {\r\n                console.error('Error message:', err.message);\r\n                setError(`An unexpected error occurred: ${err.message}`);\r\n            }\r\n        })\r\n        .finally(() => {\r\n            setLoading(false);\r\n        });\r\n}, []); // Empty dependency array means run once on mount\r\n\r\n// --- Filter Events based on Search and Club Selection ---\r\nuseEffect(() => {\r\n    let currentEvents = [...events];\r\n    const searchTermLower = searchTerm.trim().toLowerCase();\r\n    const clubFilterActive = !!selectedClub; // Check if a club is actually selected\r\n\r\n    if (searchTermLower) {\r\n        currentEvents = currentEvents.filter(event =>\r\n            (event.eid && event.eid.toLowerCase().includes(searchTermLower)) || // Check EID\r\n            (event.event_name && event.event_name.toLowerCase().includes(searchTermLower)) // Also check Event Name\r\n            // Add more fields to search if needed (e.g., event.event_details)\r\n        );\r\n    }\r\n\r\n    if (clubFilterActive) {\r\n        currentEvents = currentEvents.filter(event =>\r\n            event.club_name === selectedClub\r\n        );\r\n    }\r\n\r\n    setFilteredEvents(currentEvents);\r\n}, [searchTerm, selectedClub, events]); // Re-run when search, filter, or base events change\r\n\r\n\r\n// --- Handle Event Registration ---\r\nconst handleRegister = (eventId, eventName) => {\r\n    if (!loggedInStudentIdentifier) {\r\n        setError(\"Please log in to register for events.\"); // Show error centrally or use alert\r\n        // alert('Could not identify student. Please ensure you are logged in.');\r\n        return;\r\n    }\r\n\r\n    const confirmation = window.confirm(`Confirm registration for \"${eventName}\"?`);\r\n    if (confirmation) {\r\n        // Indicate loading specifically for this event\r\n        setRegistrationStatus(prev => ({ ...prev, [eventId]: { loading: true, message: null, error: false, success: false } }));\r\n\r\n        axios.post(`http://localhost:3001/api/student/events/register/${eventId}`,\r\n            {}, // Empty body, data sent via session/cookie\r\n            { withCredentials: true }\r\n        )\r\n        .then(response => {\r\n            console.log('Registration successful/status:', response.data);\r\n            const message = response.data.message || 'Registration successful!';\r\n            const isAlreadyRegistered = response.data.alreadyRegistered || false;\r\n\r\n            // Update status: success\r\n            setRegistrationStatus(prev => ({ ...prev, [eventId]: { loading: false, success: true, message: message } }));\r\n\r\n            // Update the main event list's registration status visually *immediately*\r\n            // Only add student ID if they weren't already marked as registered by the backend response\r\n            if (!isAlreadyRegistered) {\r\n                setEvents(prevEvents => prevEvents.map(event => {\r\n                    if (event._id === eventId) {\r\n                            // Ensure reg_std is an array, initialize if not\r\n                            const currentRegStd = Array.isArray(event.reg_std) ? event.reg_std : [];\r\n                        // Add student if not already present (double check)\r\n                        const updatedRegStd = currentRegStd.includes(loggedInStudentIdentifier)\r\n                            ? currentRegStd\r\n                            : [...currentRegStd, loggedInStudentIdentifier];\r\n                        return { ...event, reg_std: updatedRegStd };\r\n                    }\r\n                    return event;\r\n                }));\r\n            } else {\r\n                    // If already registered, ensure the frontend state reflects this too\r\n                    setEvents(prevEvents => prevEvents.map(event => {\r\n                    if (event._id === eventId) {\r\n                            const currentRegStd = Array.isArray(event.reg_std) ? event.reg_std : [];\r\n                            // Ensure the student ID is in the array if the backend says they are registered\r\n                        const updatedRegStd = currentRegStd.includes(loggedInStudentIdentifier)\r\n                            ? currentRegStd\r\n                            : [...currentRegStd, loggedInStudentIdentifier];\r\n                            return { ...event, reg_std: updatedRegStd };\r\n                    }\r\n                    return event;\r\n                }));\r\n            }\r\n\r\n            // If the registered events modal is open, refresh its data\r\n            if (showRegisteredEvents) {\r\n                fetchRegisteredEvents(); // Re-fetch to show the newly registered event\r\n            }\r\n\r\n            // Clear the success message after a delay\r\n            setTimeout(() => {\r\n                setRegistrationStatus(prev => ({ ...prev, [eventId]: undefined }));\r\n            }, 5000); // 5 seconds\r\n        })\r\n        .catch(err => {\r\n            console.error(\"Error registering for event:\", eventId, err);\r\n            let errorMessage = 'Registration failed. Please try again.';\r\n            if (err.response) {\r\n                console.error(\"Registration Error data:\", err.response.data);\r\n                console.error(\"Registration Error status:\", err.response.status);\r\n                    if (err.response.status === 401) {\r\n                    errorMessage = \"Authentication failed. Please log in again.\";\r\n                    setError(\"Authentication failed during registration. Please log in again.\"); // Show global error too\r\n                } else if (err.response.status === 400) { // Example: Bad Request (e.g., event full, not open)\r\n                        errorMessage = err.response.data.message || \"Cannot register for this event (e.g., event full or closed).\";\r\n                } else if (err.response.status === 404) { // Example: Not Found\r\n                        errorMessage = \"Event not found.\";\r\n                } else if (err.response.status === 409) { // Example: Conflict (already registered)\r\n                    errorMessage = err.response.data.message || \"You are already registered for this event.\";\r\n                    // Ensure frontend state reflects \"registered\" if backend confirms it\r\n                    setEvents(prevEvents => prevEvents.map(event => {\r\n                        if (event._id === eventId) {\r\n                            const currentRegStd = Array.isArray(event.reg_std) ? event.reg_std : [];\r\n                            const updatedRegStd = currentRegStd.includes(loggedInStudentIdentifier)\r\n                                ? currentRegStd\r\n                                : [...currentRegStd, loggedInStudentIdentifier];\r\n                            return { ...event, reg_std: updatedRegStd };\r\n                        }\r\n                        return event;\r\n                    }));\r\n                }\r\n                    else {\r\n                    errorMessage = err.response.data.message || `Registration error (Status: ${err.response.status}).`;\r\n                }\r\n            } else if (err.request) {\r\n                errorMessage = \"Network error during registration. Please check connection.\";\r\n            } else {\r\n                errorMessage = `An unexpected error occurred: ${err.message}`;\r\n            }\r\n\r\n            // Update status: error\r\n            setRegistrationStatus(prev => ({ ...prev, [eventId]: { loading: false, error: true, message: errorMessage } }));\r\n\r\n            // Clear the error message after a longer delay\r\n                setTimeout(() => {\r\n                    setRegistrationStatus(prev => ({...prev, [eventId]: undefined}));\r\n                }, 7000); // 7 seconds\r\n        });\r\n    } else {\r\n        console.log(\"Registration cancelled by user.\");\r\n    }\r\n};\r\n\r\n// --- Fetch Registered Events ---\r\nconst fetchRegisteredEvents = async () => {\r\n    if (!loggedInStudentIdentifier) {\r\n        setRegisteredError(\"Authentication required to view registered events.\");\r\n            setRegisteredEvents([]); // Clear previous data if logged out\r\n        return;\r\n    }\r\n\r\n    setLoadingRegistered(true);\r\n    setRegisteredError(null);\r\n\r\n    try {\r\n        const response = await axios.get('http://localhost:3001/api/student/events/registered', { withCredentials: true });\r\n        // Sort registered events by date as well\r\n        const sortedRegistered = response.data\r\n            .filter(event => !isNaN(new Date(event.event_date).getTime()))\r\n            .sort((a, b) => new Date(a.event_date) - new Date(b.event_date));\r\n        setRegisteredEvents(sortedRegistered);\r\n        console.log(\"Fetched and sorted registered events:\", sortedRegistered);\r\n    } catch (err) {\r\n        console.error(\"Error fetching registered events:\", err);\r\n        let errorMessage = 'Failed to fetch registered events.';\r\n            if (err.response) {\r\n                console.error(\"Fetch Registered Error Status:\", err.response.status);\r\n                if (err.response.status === 401) {\r\n                errorMessage = \"Authentication failed. Please log in again.\";\r\n                    // Optionally clear local storage / redirect\r\n            } else {\r\n                errorMessage = err.response.data.message || `Error (Status: ${err.response.status})`;\r\n            }\r\n        } else if (err.request) {\r\n            errorMessage = \"Network Error: Could not connect to server.\";\r\n        } else {\r\n            errorMessage = `An unexpected error occurred: ${err.message}`;\r\n        }\r\n        setRegisteredError(errorMessage);\r\n        setRegisteredEvents([]); // Clear data on error\r\n    } finally {\r\n        setLoadingRegistered(false);\r\n    }\r\n};\r\n\r\n// --- Handle View Registered Button Click ---\r\nconst handleViewRegisteredClick = () => {\r\n    // Always fetch the latest when the button is clicked to open the modal\r\n    if (!showRegisteredEvents) {\r\n        fetchRegisteredEvents();\r\n    }\r\n    setShowRegisteredEvents(true); // Show the modal\r\n};\r\n\r\nconst closeModal = () => {\r\n    setShowRegisteredEvents(false);\r\n    setRegisteredError(null); // Clear modal-specific errors when closing\r\n        // Don't clear registeredEvents data immediately, it might be useful if reopened quickly\r\n};\r\n\r\n\r\n// --- Helper formatDateTime ---\r\nconst formatDateTime = (dateString, timeSlots) => {\r\n    try {\r\n        const date = new Date(dateString);\r\n        // Check if date is valid\r\n        if (isNaN(date.getTime())) {\r\n            return \"Invalid Date\";\r\n        }\r\n        const formattedDate = date.toLocaleDateString('en-GB', { // Use en-GB for DD/MM/YYYY or en-US for MM/DD/YYYY\r\n            year: 'numeric', month: 'short', day: 'numeric', weekday: 'short'\r\n        });\r\n        const formattedTime = Array.isArray(timeSlots) && timeSlots.length > 0\r\n                                ? timeSlots.join(' / ')\r\n                                : 'Time TBC'; // TBC = To Be Confirmed\r\n        return `${formattedDate} ・ ${formattedTime}`; // Use a separator like '・'\r\n    } catch (e) {\r\n            console.error(\"Error formatting date/time:\", dateString, timeSlots, e);\r\n            return \"Date/Time Error\";\r\n    }\r\n};\r\n\r\n// --- JSX Rendering ---\r\nreturn (\r\n    <div className={styles.upcomingEventsContainer}>\r\n        <h1 className={styles.pageTitle}>\r\n                <FaCalendarAlt /> Upcoming Events\r\n        </h1>\r\n\r\n        {/* --- Global Error Display Area --- */}\r\n            {error && !loading && (\r\n                <div className={styles.globalError}>\r\n                    <FaExclamationCircle /> {error}\r\n                    {/* Optionally add a dismiss button */}\r\n                </div>\r\n            )}\r\n\r\n\r\n        {/* --- Controls Section --- */}\r\n        <div className={styles.controls}>\r\n            {/* Search Input */}\r\n            <div className={styles.controlGroup}>\r\n                    <label htmlFor=\"eventSearch\" className={styles.controlLabel}><FaSearch /> Search</label>\r\n                <div className={styles.inputIconWrapper}>\r\n                    <FaSearch className={styles.inputIcon} />\r\n                    <input\r\n                        id=\"eventSearch\"\r\n                        type=\"text\"\r\n                        placeholder=\"Search by Event ID or Name...\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                        className={styles.inputField}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n                {/* Filter Dropdown */}\r\n                <div className={styles.controlGroup}>\r\n                    <label htmlFor=\"clubFilter\" className={styles.controlLabel}><FaFilter /> Filter by Club</label>\r\n                <div className={styles.inputIconWrapper}>\r\n                        <FaUniversity className={styles.inputIcon} /> {/* Changed icon */}\r\n                    <select\r\n                        id=\"clubFilter\"\r\n                        value={selectedClub}\r\n                        onChange={(e) => setSelectedClub(e.target.value)}\r\n                        className={styles.selectField} // Use a different class if needed\r\n                    >\r\n                        <option value=\"\">All Clubs</option>\r\n                        {allClubs.map(club => (\r\n                            <option key={club} value={club}>{club}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                </div>\r\n\r\n            {/* View Registered Events Button */}\r\n            {loggedInStudentIdentifier && ( // Only show if logged in\r\n                <div className={`${styles.controlGroup} ${styles.viewRegisteredButtonGroup}`}>\r\n                        {/* No label needed if button text is clear */}\r\n                    <button\r\n                        className={styles.viewRegisteredButton}\r\n                        onClick={handleViewRegisteredClick}\r\n                        disabled={loadingRegistered} // Disable while modal data is loading\r\n                    >\r\n                        {loadingRegistered\r\n                            ? <><FaSpinner className={styles.spinner} /> Loading...</>\r\n                            : <><FaEye /> My Registrations</>\r\n                            }\r\n                    </button>\r\n                </div>\r\n            )}\r\n                {!loggedInStudentIdentifier && (\r\n                    <div className={styles.loginPrompt}> {/* Optional: Prompt to log in */}\r\n                        <FaInfoCircle/> Log in to register for events and view your registrations.\r\n                    </div>\r\n                )}\r\n        </div>\r\n        {/* --- End Controls Section --- */}\r\n\r\n\r\n        {/* --- Main Content Area --- */}\r\n        <div className={styles.contentArea}>\r\n            {/* Loading State */}\r\n                {loading && (\r\n                <div className={styles.centeredMessage}>\r\n                    <BeatLoader color=\"var(--primary-color, #007bff)\" loading={loading} size={18} />\r\n                    <p>Loading Events...</p>\r\n                </div>\r\n                )}\r\n\r\n            {/* No Events Found State (After Load, No Error) */}\r\n            {!loading && !error && filteredEvents.length === 0 && (\r\n                <div className={styles.centeredMessage}>\r\n                    <h2>{events.length === 0 ? \"No Upcoming Events\" : \"No Events Match\"}</h2>\r\n                    <p>{events.length === 0 ? \"Check back later for new events.\" : \"Try adjusting your search or filter.\"}</p>\r\n                        {/* Optional: Add an image or icon here */}\r\n                </div>\r\n            )}\r\n\r\n\r\n            {/* Events Grid */}\r\n            {!loading && !error && filteredEvents.length > 0 && (\r\n                <div className={styles.eventsGrid}>\r\n                    {filteredEvents.map(event => {\r\n                        // Ensure event._id exists before proceeding\r\n                        if (!event || !event._id) {\r\n                            console.warn(\"Skipping rendering event due to missing _id:\", event);\r\n                            return null; // Skip rendering this invalid event data\r\n                        }\r\n\r\n                        // Check registration status robustly\r\n                        const isRegistered = loggedInStudentIdentifier &&\r\n                                                Array.isArray(event.reg_std) &&\r\n                                                event.reg_std.includes(loggedInStudentIdentifier);\r\n\r\n                            const regInfo = registrationStatus[event._id]; // Contains loading, success, error, message\r\n                            const canRegister = event.std_reg === 'Yes'; // Check if registration is open for the event\r\n\r\n                        return (\r\n                            <div key={event._id} className={`${styles.eventCard} ${isRegistered ? styles.eventCardRegistered : ''}`}>\r\n                                <div className={styles.cardHeader}>\r\n                                    <h3 className={styles.eventName}>{event.event_name || 'Unnamed Event'}</h3>\r\n                                        <span className={styles.eventEid}><FaInfoCircle /> {event.eid || 'No ID'}</span>\r\n                                </div>\r\n\r\n                                <div className={styles.cardBody}>\r\n                                    <p className={styles.eventMeta}>\r\n                                            <FaUniversity />\r\n                                            <span><strong>Club:</strong> {event.club_name || 'N/A'}</span>\r\n                                        </p>\r\n                                    <p className={styles.eventMeta}>\r\n                                        <FaCalendarAlt />\r\n                                        <span>{formatDateTime(event.event_date, event.time_slots)}</span>\r\n                                    </p>\r\n                                    <p className={styles.eventMeta}>\r\n                                        <FaMapMarkerAlt />\r\n                                        <span><strong>Location:</strong> {event.room_number ? ` ${event.room_number}` : 'Location TBD'}</span>\r\n                                    </p>\r\n                                    {event.event_details && (\r\n                                        <p className={styles.eventDetails}>\r\n                                                {/* Using dangerouslySetInnerHTML is risky if details contain HTML from users.\r\n                                                    Sanitize backend or use a library like DOMPurify on frontend if needed.\r\n                                                    Assuming details are plain text for now. */}\r\n                                                {event.event_details.substring(0, 120)}{event.event_details.length > 120 ? '...' : ''}\r\n                                                {/* Add a \"Read More\" button if needed */}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Registration Footer Area */}\r\n                                <div className={styles.cardFooter}>\r\n                                    {canRegister && loggedInStudentIdentifier && ( // Show button only if reg is 'Yes' and user is logged in\r\n                                        <div className={styles.registrationArea}>\r\n                                            <button\r\n                                                className={`${styles.registerButton} ${isRegistered ? styles.registered : styles.notRegistered} ${regInfo?.loading ? styles.loading : ''} ${regInfo?.success ? styles.successFlash : ''} ${regInfo?.error ? styles.errorFlash : ''}`}\r\n                                                onClick={() => !isRegistered && !regInfo?.loading && handleRegister(event._id, event.event_name)}\r\n                                                disabled={isRegistered || regInfo?.loading} // Disable if registered OR currently loading\r\n                                                title={isRegistered ? \"You are registered for this event\" : `Register for ${event.event_name}`}\r\n                                            >\r\n                                                {regInfo?.loading ? (\r\n                                                    <><FaSpinner className={styles.spinner} /> Processing...</>\r\n                                                ) : isRegistered ? (\r\n                                                    <><FaUserCheck /> Registered</>\r\n                                                ) : (\r\n                                                    'Register Now'\r\n                                                )}\r\n                                            </button>\r\n                                                {/* Status Message Area - show only ONE message at a time */}\r\n                                                <div className={styles.regStatusMessage}>\r\n                                                    {regInfo?.success && !regInfo?.loading && <span className={styles.regSuccess}><FaCheckCircle /> {regInfo.message}</span>}\r\n                                                    {regInfo?.error && !regInfo?.loading && <span className={styles.regError}><FaTimesCircle /> {regInfo.message}</span>}\r\n                                                    {/* Optional: Add message if registration is closed */}\r\n                                                    {/* {!isRegistered && !regInfo && event.status === 'Closed' && <span className={styles.regInfo}>Registration Closed</span>} */}\r\n                                                </div>\r\n                                        </div>\r\n                                    )}\r\n                                        {canRegister && !loggedInStudentIdentifier && ( // Show prompt if reg is 'Yes' but user not logged in\r\n                                            <div className={styles.loginToRegisterPrompt}>\r\n                                                <FaInfoCircle /> Log in to register\r\n                                            </div>\r\n                                        )}\r\n                                    {!canRegister && ( // Show message if registration is not available ('No' or other value)\r\n                                        <div className={styles.noRegistration}>\r\n                                            <FaEyeSlash /> Registration not required or unavailable\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            )}\r\n        </div> {/* End Content Area */}\r\n\r\n\r\n        {/* --- Registered Events Modal --- */}\r\n        {showRegisteredEvents && (\r\n                // Use the closeModal function on overlay click\r\n            <div className={styles.modalOverlay} onClick={closeModal}>\r\n                    {/* Stop propagation so clicking inside modal doesn't close it */}\r\n                <div className={styles.modalContent} onClick={(e) => e.stopPropagation()}>\r\n                    <button className={styles.modalCloseButton} onClick={closeModal} aria-label=\"Close modal\">\r\n                        <FaTimes />\r\n                    </button>\r\n                    <h2 className={styles.modalTitle}><FaUserCheck /> Your Registered Events</h2>\r\n\r\n                        {loadingRegistered && (\r\n                        <div className={styles.centeredMessage}>\r\n                            <BeatLoader color=\"var(--primary-color, #007bff)\" size={15} />\r\n                            <p>Loading your registrations...</p>\r\n                        </div>\r\n                        )}\r\n\r\n                        {registeredError && !loadingRegistered && (\r\n                        <div className={`${styles.centeredMessage} ${styles.modalError}`}>\r\n                            <FaExclamationCircle size={24} />\r\n                            <p>{registeredError}</p>\r\n                            {/* Optionally add a retry button */}\r\n                            {/* <button onClick={fetchRegisteredEvents}>Retry</button> */}\r\n                        </div>\r\n                        )}\r\n\r\n                        {!loadingRegistered && !registeredError && registeredEvents.length === 0 && (\r\n                            <div className={styles.centeredMessage}>\r\n                            <FaCalendarAlt size={30} style={{marginBottom: '10px', color: '#aaa'}}/>\r\n                            <p>You haven't registered for any upcoming events yet.</p>\r\n                            </div>\r\n                        )}\r\n\r\n                    {!loadingRegistered && !registeredError && registeredEvents.length > 0 && (\r\n                        <ul className={styles.registeredEventsList}>\r\n                            {registeredEvents.map(event => (\r\n                                <li key={event._id} className={styles.registeredEventItem}>\r\n                                    <strong className={styles.registeredEventName}>{event.event_name}</strong>\r\n                                    <p><FaUniversity /> {event.club_name || 'N/A'}</p>\r\n                                    <p><FaCalendarAlt /> {formatDateTime(event.event_date, event.time_slots)}</p>\r\n                                        <p><FaMapMarkerAlt /> {event.room_number ? `Room ${event.room_number}` : 'Location TBD'}</p>\r\n                                        <span className={styles.registeredEventEid}><FaInfoCircle /> EID: {event.eid || 'N/A'}</span>\r\n                                        {/* Add a link/button to view event details maybe? */}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )}\r\n        {/* --- End Registered Events Modal --- */}\r\n\r\n    </div>\r\n);\r\n}\r\n\r\nexport default UpcomingEvents;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}