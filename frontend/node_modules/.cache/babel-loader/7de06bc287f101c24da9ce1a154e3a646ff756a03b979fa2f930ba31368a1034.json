{"ast":null,"code":"var _jsxFileName = \"E:\\\\ClubSync\\\\frontend\\\\src\\\\pages\\\\ClubRecruitments.jsx\",\n  _s = $RefreshSig$();\n// src/pages/ClubRecruitments.jsx\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './ClubRecruitments.css'; // Import CSS file\nimport { FaPlay, FaStop, FaUsers, FaCheckCircle, FaTimesCircle, FaHourglassHalf, FaSearch, FaInfoCircle, FaSpinner, FaExclamationTriangle } from 'react-icons/fa'; // Using react-icons\n\n// Assume you have a predefined list of possible semesters or fetch them\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AVAILABLE_SEMESTERS = [\"Fall 2025\", \"Spring 2026\", \"Fall 2026\", \"Spring 2027\"\n// Add more as needed\n];\nfunction ClubRecruitments() {\n  _s();\n  // --- State Variables ---\n  const [clubInfo, setClubInfo] = useState(null); // Basic club info { _id, cname, cid }\n  const [isRecruiting, setIsRecruiting] = useState(false); // Club's overall recruitment status ('Yes'/'No')\n  const [activeSemesters, setActiveSemesters] = useState([]); // Semesters currently open for recruitment\n  const [semesterData, setSemesterData] = useState([]); // Stats per active semester\n  const [selectedSemester, setSelectedSemester] = useState(AVAILABLE_SEMESTERS[0] || ''); // Semester to start recruiting for\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [actionLoading, setActionLoading] = useState(false); // Loading state for start/stop actions\n\n  // --- Hooks ---\n  const {\n    clubId\n  } = useParams(); // Get clubId from URL (ensure your route is setup like /club/:clubId/recruitments)\n  const navigate = useNavigate();\n\n  // --- API Base URL (Configure appropriately) ---\n  const API_URL = '/api/recruitment'; // Adjust based on your server setup\n\n  // --- Fetch Club Recruitment Data ---\n  const fetchClubData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Use the '/details/:clubId' endpoint\n      const response = await axios.get(`${API_URL}/details/${clubId}`);\n      const {\n        club,\n        activeSemesters: fetchedActiveSemesters,\n        semesterData: fetchedSemesterData\n      } = response.data;\n      setClubInfo({\n        // Store only necessary info\n        _id: club._id,\n        cname: club.cname,\n        cid: club.cid\n      });\n      setIsRecruiting(club.creq === 'Yes');\n      setActiveSemesters(fetchedActiveSemesters || []);\n      setSemesterData(fetchedSemesterData || []);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Error fetching club recruitment data:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to load recruitment data. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  }, [clubId, API_URL]); // Dependency: clubId and API_URL\n\n  // --- Initial Data Load ---\n  useEffect(() => {\n    if (clubId) {\n      fetchClubData();\n    } else {\n      setError(\"Club ID not found in URL.\");\n      setIsLoading(false);\n    }\n  }, [clubId, fetchClubData]); // Run when clubId or fetchClubData changes\n\n  // --- Handle Start Recruitment ---\n  const handleStartRecruitment = async () => {\n    if (!selectedSemester) {\n      setError(\"Please select a semester to start recruitment.\");\n      return;\n    }\n    setActionLoading(true);\n    setError(null);\n    try {\n      // Call the refined '/set-recruitment' endpoint\n      const response = await axios.post(`${API_URL}/set-recruitment/${clubId}`, {\n        semester: selectedSemester,\n        recruitmentStatus: 'Yes'\n      });\n\n      // Update state based on the response from the backend\n      const {\n        club: updatedClub,\n        semesterData: updatedSemesterData\n      } = response.data;\n      setIsRecruiting(updatedClub.creq === 'Yes');\n      setActiveSemesters(updatedClub.semester || []);\n      setSemesterData(updatedSemesterData || []);\n      // Optionally clear selection or set to next logical semester\n      // setSelectedSemester(AVAILABLE_SEMESTERS[0] || '');\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(\"Error starting recruitment:\", err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to start recruitment.\");\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  // --- Handle Stop Recruitment ---\n  const handleStopRecruitment = async () => {\n    setActionLoading(true);\n    setError(null);\n    try {\n      // Call the refined '/set-recruitment' endpoint to turn OFF\n      const response = await axios.post(`${API_URL}/set-recruitment/${clubId}`, {\n        recruitmentStatus: 'No'\n        // No semester needed when stopping\n      });\n\n      // Update state based on the response\n      const {\n        club: updatedClub,\n        semesterData: updatedSemesterData\n      } = response.data;\n      setIsRecruiting(updatedClub.creq === 'Yes'); // Should be false now\n      setActiveSemesters(updatedClub.semester || []); // Should be empty now\n      setSemesterData(updatedSemesterData || []); // Should reflect no active semesters\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error(\"Error stopping recruitment:\", err);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Failed to stop recruitment.\");\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  // --- Handle Navigate to Evaluation Page ---\n  const handleEvaluate = semester => {\n    // Navigate to a new route for evaluation, passing clubId and semester\n    // Ensure this route exists in your React Router setup\n    navigate(`/club/evaluate/${clubId}/${encodeURIComponent(semester)}`);\n  };\n\n  // --- Render Logic ---\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(FaSpinner, {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 51\n      }, this), \" Loading Recruitment Data...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Determine which semesters are available to start recruiting for (not already active)\n  const availableSemestersForStarting = AVAILABLE_SEMESTERS.filter(sem => !activeSemesters.includes(sem));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recruitment-page-container\",\n    children: [clubInfo && /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"recruitment-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [clubInfo.cname, \" - Recruitment Management\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"club-id\",\n        children: [\"Club ID: \", clubInfo.cid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(FaExclamationTriangle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 54\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"status-control-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-indicator ${isRecruiting ? 'active' : 'inactive'}`,\n        children: [/*#__PURE__*/_jsxDEV(FaInfoCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Recruitment Status: \", isRecruiting ? 'Active' : 'Inactive']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), isRecruiting ?\n      /*#__PURE__*/\n      // --- Controls when ACTIVE ---\n      _jsxDEV(\"div\", {\n        className: \"recruitment-actions\",\n        children: [availableSemestersForStarting.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"start-recruitment-form add-semester-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedSemester,\n            onChange: e => setSelectedSemester(e.target.value),\n            disabled: actionLoading,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select semester to add...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 37\n            }, this), availableSemestersForStarting.map(sem => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: sem,\n              children: sem\n            }, sem, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartRecruitment,\n            disabled: actionLoading || !selectedSemester,\n            className: \"action-button start-button\",\n            children: actionLoading ? /*#__PURE__*/_jsxDEV(FaSpinner, {\n              className: \"spinner-button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 54\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 99\n              }, this), \" Add Recruitment Semester\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStopRecruitment,\n          disabled: actionLoading,\n          className: \"action-button stop-button\",\n          children: actionLoading ? /*#__PURE__*/_jsxDEV(FaSpinner, {\n            className: \"spinner-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FaStop, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 91\n            }, this), \" Stop All Recruitment\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this) :\n      /*#__PURE__*/\n      // --- Controls when INACTIVE ---\n      _jsxDEV(\"div\", {\n        className: \"recruitment-actions\",\n        children: availableSemestersForStarting.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"start-recruitment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedSemester,\n            onChange: e => setSelectedSemester(e.target.value),\n            disabled: actionLoading,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select semester to start...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 38\n            }, this), AVAILABLE_SEMESTERS.map(sem => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: sem,\n              children: sem\n            }, sem, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartRecruitment,\n            disabled: actionLoading || !selectedSemester,\n            className: \"action-button start-button\",\n            children: actionLoading ? /*#__PURE__*/_jsxDEV(FaSpinner, {\n              className: \"spinner-button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 54\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 99\n              }, this), \" Start Recruitment\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"All available semesters are already active or no semesters defined.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), isRecruiting && activeSemesters.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"active-semesters-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Active Recruitment Semesters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"semester-grid\",\n        children: semesterData.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"semester-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.semester\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"semester-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(FaUsers, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 40\n              }, this), \" Total Applicants: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: data.totalApplicants\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 70\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(FaHourglassHalf, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 40\n              }, this), \" Pending: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: data.pending\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 69\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {\n                className: \"accepted-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 40\n              }, this), \" Accepted: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: data.accepted\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 93\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(FaTimesCircle, {\n                className: \"rejected-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 40\n              }, this), \" Rejected: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: data.rejected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 93\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"semester-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEvaluate(data.semester),\n              className: \"action-button evaluate-button\",\n              children: [/*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 41\n              }, this), \" Evaluate Applicants\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 33\n          }, this)]\n        }, data.semester, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }, this), !isRecruiting && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"info-section\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Recruitment is currently turned off. Select a semester and click \\\"Start Recruitment\\\" to begin accepting applications.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 18\n    }, this), isRecruiting && activeSemesters.length === 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"info-section\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Recruitment is ON, but no specific semesters are currently active for applications. Use the form above to add a recruitment semester.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}\n_s(ClubRecruitments, \"dlRKn1HJo+lo8tiMnJH+Hb3kslM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ClubRecruitments;\nexport default ClubRecruitments;\nvar _c;\n$RefreshReg$(_c, \"ClubRecruitments\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","useParams","useNavigate","FaPlay","FaStop","FaUsers","FaCheckCircle","FaTimesCircle","FaHourglassHalf","FaSearch","FaInfoCircle","FaSpinner","FaExclamationTriangle","jsxDEV","_jsxDEV","Fragment","_Fragment","AVAILABLE_SEMESTERS","ClubRecruitments","_s","clubInfo","setClubInfo","isRecruiting","setIsRecruiting","activeSemesters","setActiveSemesters","semesterData","setSemesterData","selectedSemester","setSelectedSemester","isLoading","setIsLoading","error","setError","actionLoading","setActionLoading","clubId","navigate","API_URL","fetchClubData","response","get","club","fetchedActiveSemesters","fetchedSemesterData","data","_id","cname","cid","creq","err","_err$response","_err$response$data","console","message","handleStartRecruitment","post","semester","recruitmentStatus","updatedClub","updatedSemesterData","_err$response2","_err$response2$data","handleStopRecruitment","_err$response3","_err$response3$data","handleEvaluate","encodeURIComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","availableSemestersForStarting","filter","sem","includes","length","value","onChange","e","target","disabled","map","onClick","totalApplicants","pending","accepted","rejected","_c","$RefreshReg$"],"sources":["E:/ClubSync/frontend/src/pages/ClubRecruitments.jsx"],"sourcesContent":["// src/pages/ClubRecruitments.jsx\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './ClubRecruitments.css'; // Import CSS file\r\nimport {\r\n    FaPlay, FaStop, FaUsers, FaCheckCircle, FaTimesCircle, FaHourglassHalf, FaSearch, FaInfoCircle, FaSpinner, FaExclamationTriangle\r\n} from 'react-icons/fa'; // Using react-icons\r\n\r\n// Assume you have a predefined list of possible semesters or fetch them\r\nconst AVAILABLE_SEMESTERS = [\r\n    \"Fall 2025\",\r\n    \"Spring 2026\",\r\n    \"Fall 2026\",\r\n    \"Spring 2027\",\r\n    // Add more as needed\r\n];\r\n\r\nfunction ClubRecruitments() {\r\n    // --- State Variables ---\r\n    const [clubInfo, setClubInfo] = useState(null); // Basic club info { _id, cname, cid }\r\n    const [isRecruiting, setIsRecruiting] = useState(false); // Club's overall recruitment status ('Yes'/'No')\r\n    const [activeSemesters, setActiveSemesters] = useState([]); // Semesters currently open for recruitment\r\n    const [semesterData, setSemesterData] = useState([]); // Stats per active semester\r\n    const [selectedSemester, setSelectedSemester] = useState(AVAILABLE_SEMESTERS[0] || ''); // Semester to start recruiting for\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [actionLoading, setActionLoading] = useState(false); // Loading state for start/stop actions\r\n\r\n    // --- Hooks ---\r\n    const { clubId } = useParams(); // Get clubId from URL (ensure your route is setup like /club/:clubId/recruitments)\r\n    const navigate = useNavigate();\r\n\r\n    // --- API Base URL (Configure appropriately) ---\r\n    const API_URL = '/api/recruitment'; // Adjust based on your server setup\r\n\r\n    // --- Fetch Club Recruitment Data ---\r\n    const fetchClubData = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            // Use the '/details/:clubId' endpoint\r\n            const response = await axios.get(`${API_URL}/details/${clubId}`);\r\n            const { club, activeSemesters: fetchedActiveSemesters, semesterData: fetchedSemesterData } = response.data;\r\n\r\n            setClubInfo({ // Store only necessary info\r\n                _id: club._id,\r\n                cname: club.cname,\r\n                cid: club.cid,\r\n            });\r\n            setIsRecruiting(club.creq === 'Yes');\r\n            setActiveSemesters(fetchedActiveSemesters || []);\r\n            setSemesterData(fetchedSemesterData || []);\r\n\r\n        } catch (err) {\r\n            console.error(\"Error fetching club recruitment data:\", err);\r\n            setError(err.response?.data?.message || \"Failed to load recruitment data. Please try again.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [clubId, API_URL]); // Dependency: clubId and API_URL\r\n\r\n    // --- Initial Data Load ---\r\n    useEffect(() => {\r\n        if (clubId) {\r\n            fetchClubData();\r\n        } else {\r\n            setError(\"Club ID not found in URL.\");\r\n            setIsLoading(false);\r\n        }\r\n    }, [clubId, fetchClubData]); // Run when clubId or fetchClubData changes\r\n\r\n    // --- Handle Start Recruitment ---\r\n    const handleStartRecruitment = async () => {\r\n        if (!selectedSemester) {\r\n            setError(\"Please select a semester to start recruitment.\");\r\n            return;\r\n        }\r\n        setActionLoading(true);\r\n        setError(null);\r\n        try {\r\n            // Call the refined '/set-recruitment' endpoint\r\n            const response = await axios.post(`${API_URL}/set-recruitment/${clubId}`, {\r\n                semester: selectedSemester,\r\n                recruitmentStatus: 'Yes'\r\n            });\r\n\r\n            // Update state based on the response from the backend\r\n            const { club: updatedClub, semesterData: updatedSemesterData } = response.data;\r\n            setIsRecruiting(updatedClub.creq === 'Yes');\r\n            setActiveSemesters(updatedClub.semester || []);\r\n            setSemesterData(updatedSemesterData || []);\r\n            // Optionally clear selection or set to next logical semester\r\n            // setSelectedSemester(AVAILABLE_SEMESTERS[0] || '');\r\n\r\n\r\n        } catch (err) {\r\n            console.error(\"Error starting recruitment:\", err);\r\n            setError(err.response?.data?.message || \"Failed to start recruitment.\");\r\n        } finally {\r\n            setActionLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- Handle Stop Recruitment ---\r\n    const handleStopRecruitment = async () => {\r\n        setActionLoading(true);\r\n        setError(null);\r\n        try {\r\n            // Call the refined '/set-recruitment' endpoint to turn OFF\r\n            const response = await axios.post(`${API_URL}/set-recruitment/${clubId}`, {\r\n                recruitmentStatus: 'No'\r\n                // No semester needed when stopping\r\n            });\r\n\r\n            // Update state based on the response\r\n             const { club: updatedClub, semesterData: updatedSemesterData } = response.data;\r\n             setIsRecruiting(updatedClub.creq === 'Yes'); // Should be false now\r\n             setActiveSemesters(updatedClub.semester || []); // Should be empty now\r\n             setSemesterData(updatedSemesterData || []); // Should reflect no active semesters\r\n\r\n\r\n        } catch (err) {\r\n            console.error(\"Error stopping recruitment:\", err);\r\n            setError(err.response?.data?.message || \"Failed to stop recruitment.\");\r\n        } finally {\r\n            setActionLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- Handle Navigate to Evaluation Page ---\r\n    const handleEvaluate = (semester) => {\r\n        // Navigate to a new route for evaluation, passing clubId and semester\r\n        // Ensure this route exists in your React Router setup\r\n        navigate(`/club/evaluate/${clubId}/${encodeURIComponent(semester)}`);\r\n    };\r\n\r\n    // --- Render Logic ---\r\n    if (isLoading) {\r\n        return <div className=\"loading-container\"><FaSpinner className=\"spinner\" /> Loading Recruitment Data...</div>;\r\n    }\r\n\r\n    // Determine which semesters are available to start recruiting for (not already active)\r\n    const availableSemestersForStarting = AVAILABLE_SEMESTERS.filter(\r\n        sem => !activeSemesters.includes(sem)\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"recruitment-page-container\">\r\n            {clubInfo && (\r\n                <header className=\"recruitment-header\">\r\n                    <h1>{clubInfo.cname} - Recruitment Management</h1>\r\n                    <p className=\"club-id\">Club ID: {clubInfo.cid}</p>\r\n                </header>\r\n            )}\r\n\r\n            {error && <div className=\"error-message\"><FaExclamationTriangle /> {error}</div>}\r\n\r\n            <section className=\"status-control-section\">\r\n                <div className={`status-indicator ${isRecruiting ? 'active' : 'inactive'}`}>\r\n                    <FaInfoCircle />\r\n                    <span>Recruitment Status: {isRecruiting ? 'Active' : 'Inactive'}</span>\r\n                </div>\r\n\r\n                {isRecruiting ? (\r\n                    // --- Controls when ACTIVE ---\r\n                    <div className=\"recruitment-actions\">\r\n                         {/* Option to add another semester */}\r\n                         {availableSemestersForStarting.length > 0 && (\r\n                            <div className=\"start-recruitment-form add-semester-form\">\r\n                                <select\r\n                                    value={selectedSemester}\r\n                                    onChange={(e) => setSelectedSemester(e.target.value)}\r\n                                    disabled={actionLoading}\r\n                                >\r\n                                    <option value=\"\" disabled>Select semester to add...</option>\r\n                                    {availableSemestersForStarting.map(sem => (\r\n                                        <option key={sem} value={sem}>{sem}</option>\r\n                                    ))}\r\n                                </select>\r\n                                <button\r\n                                    onClick={handleStartRecruitment}\r\n                                    disabled={actionLoading || !selectedSemester}\r\n                                    className=\"action-button start-button\"\r\n                                >\r\n                                    {actionLoading ? <FaSpinner className=\"spinner-button\" /> : <><FaPlay /> Add Recruitment Semester</>}\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                         <button\r\n                            onClick={handleStopRecruitment}\r\n                            disabled={actionLoading}\r\n                            className=\"action-button stop-button\"\r\n                        >\r\n                            {actionLoading ? <FaSpinner className=\"spinner-button\" /> : <><FaStop /> Stop All Recruitment</>}\r\n                        </button>\r\n                    </div>\r\n                ) : (\r\n                    // --- Controls when INACTIVE ---\r\n                    <div className=\"recruitment-actions\">\r\n                         {availableSemestersForStarting.length > 0 ? (\r\n                            <div className=\"start-recruitment-form\">\r\n                                <select\r\n                                    value={selectedSemester}\r\n                                    onChange={(e) => setSelectedSemester(e.target.value)}\r\n                                    disabled={actionLoading}\r\n                                >\r\n                                     <option value=\"\" disabled>Select semester to start...</option>\r\n                                    {/* Show all available semesters if none are active */}\r\n                                    {AVAILABLE_SEMESTERS.map(sem => (\r\n                                        <option key={sem} value={sem}>{sem}</option>\r\n                                    ))}\r\n                                </select>\r\n                                <button\r\n                                    onClick={handleStartRecruitment}\r\n                                    disabled={actionLoading || !selectedSemester}\r\n                                    className=\"action-button start-button\"\r\n                                >\r\n                                    {actionLoading ? <FaSpinner className=\"spinner-button\" /> : <><FaPlay /> Start Recruitment</>}\r\n                                </button>\r\n                             </div>\r\n                        ) : (\r\n                            <p>All available semesters are already active or no semesters defined.</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </section>\r\n\r\n            {isRecruiting && activeSemesters.length > 0 && (\r\n                <section className=\"active-semesters-section\">\r\n                    <h2>Active Recruitment Semesters</h2>\r\n                    <div className=\"semester-grid\">\r\n                        {semesterData.map((data) => (\r\n                            <div key={data.semester} className=\"semester-card\">\r\n                                <h3>{data.semester}</h3>\r\n                                <div className=\"semester-stats\">\r\n                                    <p><FaUsers /> Total Applicants: <span>{data.totalApplicants}</span></p>\r\n                                    <p><FaHourglassHalf /> Pending: <span>{data.pending}</span></p>\r\n                                    <p><FaCheckCircle className=\"accepted-icon\"/> Accepted: <span>{data.accepted}</span></p>\r\n                                    <p><FaTimesCircle className=\"rejected-icon\"/> Rejected: <span>{data.rejected}</span></p>\r\n                                </div>\r\n                                <div className=\"semester-actions\">\r\n                                    <button\r\n                                        onClick={() => handleEvaluate(data.semester)}\r\n                                        className=\"action-button evaluate-button\"\r\n                                    >\r\n                                        <FaSearch /> Evaluate Applicants\r\n                                    </button>\r\n                                    {/* Optional: Add button here to stop recruitment for *only* this semester */}\r\n                                     {/* <button className=\"action-button stop-semester-button\">Stop for {data.semester}</button> */}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n            )}\r\n             {!isRecruiting && (\r\n                 <section className=\"info-section\">\r\n                    <p>Recruitment is currently turned off. Select a semester and click \"Start Recruitment\" to begin accepting applications.</p>\r\n                </section>\r\n            )}\r\n             {isRecruiting && activeSemesters.length === 0 && (\r\n                <section className=\"info-section\">\r\n                    <p>Recruitment is ON, but no specific semesters are currently active for applications. Use the form above to add a recruitment semester.</p>\r\n                </section>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClubRecruitments;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}