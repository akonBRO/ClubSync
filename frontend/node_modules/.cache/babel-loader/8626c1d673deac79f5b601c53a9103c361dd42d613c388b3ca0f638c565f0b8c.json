{"ast":null,"code":"var _jsxFileName = \"E:\\\\ClubSync\\\\frontend\\\\src\\\\pages\\\\EvaluateApplicants.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/EvaluateApplicants.jsx\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './EvaluateApplicants.module.css'; // Import the CSS module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EvaluateApplicants = () => {\n  _s();\n  const {\n    semester\n  } = useParams(); // Get semester from URL\n  const [club, setClub] = useState(null); // Store club details\n  const [applicants, setApplicants] = useState([]); // Store applicant list with full details\n  const [searchTerm, setSearchTerm] = useState(''); // For filtering\n  const [loading, setLoading] = useState(true); // Loading state for API calls\n  const [error, setError] = useState(''); // Error message state\n\n  // Fetch initial data (club details and applicants)\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError('');\n    try {\n      // 1. Fetch Club Dashboard Info (includes club ObjectId)\n      const clubRes = await axios.get('http://localhost:3001/api/clubs/dashboard');\n      if (!clubRes.data || !clubRes.data.clubDetails) {\n        throw new Error(\"Failed to retrieve valid club details from dashboard.\");\n      }\n      const fetchedClub = clubRes.data.clubDetails;\n      setClub(fetchedClub);\n\n      // 2. Fetch Applicants for this club and semester using club ObjectId\n      const applicantsRes = await axios.get(`http://localhost:3001/api/recruitment/applicants/${fetchedClub._id}/${semester}`);\n      if (applicantsRes.data && Array.isArray(applicantsRes.data.applicants)) {\n        // Initialize selectedStatus based on fetched status\n        const initialApplicants = applicantsRes.data.applicants.map(app => ({\n          ...app,\n          selectedStatus: app.status // Initialize dropdown selection\n        }));\n        setApplicants(initialApplicants);\n      } else {\n        setApplicants([]); // Set empty if no applicants data\n      }\n    } catch (err) {\n      var _err$response;\n      console.error(\"Error fetching data:\", err);\n      // Handle specific errors (e.g., 401 Unauthorized)\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        setError(\"Authentication error. Please log in again.\");\n        // Optionally redirect to login\n      } else {\n        var _err$response2, _err$response2$data;\n        setError(`Error loading data: ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message}`);\n      }\n      setClub(null); // Clear club state on error\n      setApplicants([]); // Clear applicants state on error\n    } finally {\n      setLoading(false); // Ensure loading is set to false\n    }\n  }, [semester]); // Re-run if semester changes\n\n  // Fetch data on component mount and when semester changes\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]); // Use fetchData in dependency array\n\n  // Handle change in the status dropdown for an applicant\n  const handleStatusChange = (uid, newSelectedStatus) => {\n    setApplicants(prevApplicants => prevApplicants.map(app => app.uid === uid ? {\n      ...app,\n      selectedStatus: newSelectedStatus\n    } : app));\n  };\n\n  // Handle submission of the status update for a single applicant\n  const handleSubmitUpdate = async uid => {\n    if (!club) {\n      setError(\"Cannot update applicant: Club data not loaded.\");\n      return;\n    }\n\n    // Find the applicant in the current state to get their selectedStatus\n    const applicantToUpdate = applicants.find(app => app.uid === uid);\n    if (!applicantToUpdate) {\n      setError(\"Applicant not found for update.\");\n      return;\n    }\n    const newStatus = applicantToUpdate.selectedStatus; // The status selected in the dropdown\n\n    // Disable button temporarily? (Optional: add isUpdating state per applicant)\n    // setApplicants(prev => prev.map(a => a.uid === uid ? {...a, isUpdating: true} : a));\n\n    setError(''); // Clear previous errors specific to this action\n\n    try {\n      await axios.post('http://localhost:3001/api/recruitment/evaluate', {\n        clubId: club._id,\n        // Club's ObjectId\n        semester,\n        uid,\n        action: newStatus // Send the selected status as the action\n      });\n\n      // Update the 'status' field in the local state to reflect the successful update\n      // The 'selectedStatus' already matches, but 'status' represents the confirmed state\n      setApplicants(prevApplicants => prevApplicants.map(app => app.uid === uid ? {\n        ...app,\n        status: newStatus /*, isUpdating: false*/\n      } : app));\n      // Maybe show a success message briefly?\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error(\"Error updating applicant status:\", err);\n      setError(`Error updating status for UID ${uid}: ${((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message}`);\n      // Re-enable button if disabled\n      // setApplicants(prev => prev.map(a => a.uid === uid ? {...a, isUpdating: false} : a));\n    }\n  };\n\n  // Calculate counts based on the *confirmed* status\n  const counts = {\n    pending: applicants.filter(a => a.status === 'pending').length,\n    approved: applicants.filter(a => a.status === 'approved').length,\n    rejected: applicants.filter(a => a.status === 'rejected').length\n  };\n\n  // Filter applicants based on search term (name or UID)\n  const filteredApplicants = applicants.filter(a => a.uname.toLowerCase().includes(searchTerm.toLowerCase()) || a.uid.toString().includes(searchTerm));\n\n  // Render Loading State\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loading,\n      children: \"Loading applicant data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render Error State\n  if (error && !club) {\n    // Show general error if club loading failed\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 14\n    }, this);\n  }\n\n  // Main Render Logic\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Evaluate Applicants (\", semester, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Club: \", (club === null || club === void 0 ? void 0 : club.cname) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.stats,\n        children: [\"Pending: \", counts.pending, \" | Approved: \", counts.approved, \" | Rejected: \", counts.rejected, \" | Total: \", applicants.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by name or ID...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      className: styles.searchBox,\n      disabled: !club // Disable if club data isn't loaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.applicantsGrid,\n      children: filteredApplicants.length > 0 ? filteredApplicants.map(app => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.applicantCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: styles.applicantName,\n          children: [app.uname, \" (ID: \", app.uid, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.applicantInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 20\n            }, this), \" \", app.umail || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mobile:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 20\n            }, this), \" \", app.umobile || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Gender:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 20\n            }, this), \" \", app.ugender || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Major:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 20\n            }, this), \" \", app.major || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Semester:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 20\n            }, this), \" \", app.semester || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 20\n            }, this), \" \", app.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.controls,\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: app.selectedStatus // Bind to the temporary selected status\n            ,\n            onChange: e => handleStatusChange(app.uid, e.target.value),\n            className: styles.statusSelect\n            // disabled={app.isUpdating} // Optional: disable while updating\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pending\",\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"approved\",\n              children: \"Approved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rejected\",\n              children: \"Rejected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSubmitUpdate(app.uid),\n            className: styles.submitButton\n            // disabled={app.isUpdating || app.status === app.selectedStatus} // Optional: disable if no change or updating\n            ,\n            disabled: app.status === app.selectedStatus // Disable if status hasn't changed\n            ,\n            children: \"Submit Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this)]\n      }, app.uid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No applicants found matching your criteria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(EvaluateApplicants, \"QG3Hd6634BOcN4+y3u2OGEj7gx8=\", false, function () {\n  return [useParams];\n});\n_c = EvaluateApplicants;\nexport default EvaluateApplicants;\nvar _c;\n$RefreshReg$(_c, \"EvaluateApplicants\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useParams","axios","styles","jsxDEV","_jsxDEV","EvaluateApplicants","_s","semester","club","setClub","applicants","setApplicants","searchTerm","setSearchTerm","loading","setLoading","error","setError","fetchData","clubRes","get","data","clubDetails","Error","fetchedClub","applicantsRes","_id","Array","isArray","initialApplicants","map","app","selectedStatus","status","err","_err$response","console","response","_err$response2","_err$response2$data","message","handleStatusChange","uid","newSelectedStatus","prevApplicants","handleSubmitUpdate","applicantToUpdate","find","newStatus","post","clubId","action","_err$response3","_err$response3$data","counts","pending","filter","a","length","approved","rejected","filteredApplicants","uname","toLowerCase","includes","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","container","header","cname","stats","type","placeholder","value","onChange","e","target","searchBox","disabled","applicantsGrid","applicantCard","applicantName","applicantInfo","umail","umobile","ugender","major","controls","statusSelect","onClick","submitButton","_c","$RefreshReg$"],"sources":["E:/ClubSync/frontend/src/pages/EvaluateApplicants.jsx"],"sourcesContent":["// frontend/src/pages/EvaluateApplicants.jsx\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styles from './EvaluateApplicants.module.css'; // Import the CSS module\r\n\r\nconst EvaluateApplicants = () => {\r\n  const { semester } = useParams(); // Get semester from URL\r\n  const [club, setClub] = useState(null); // Store club details\r\n  const [applicants, setApplicants] = useState([]); // Store applicant list with full details\r\n  const [searchTerm, setSearchTerm] = useState(''); // For filtering\r\n  const [loading, setLoading] = useState(true); // Loading state for API calls\r\n  const [error, setError] = useState(''); // Error message state\r\n\r\n  // Fetch initial data (club details and applicants)\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      // 1. Fetch Club Dashboard Info (includes club ObjectId)\r\n      const clubRes = await axios.get('http://localhost:3001/api/clubs/dashboard');\r\n      if (!clubRes.data || !clubRes.data.clubDetails) {\r\n        throw new Error(\"Failed to retrieve valid club details from dashboard.\");\r\n      }\r\n      const fetchedClub = clubRes.data.clubDetails;\r\n      setClub(fetchedClub);\r\n\r\n      // 2. Fetch Applicants for this club and semester using club ObjectId\r\n      const applicantsRes = await axios.get(`http://localhost:3001/api/recruitment/applicants/${fetchedClub._id}/${semester}`);\r\n      if (applicantsRes.data && Array.isArray(applicantsRes.data.applicants)) {\r\n         // Initialize selectedStatus based on fetched status\r\n         const initialApplicants = applicantsRes.data.applicants.map(app => ({\r\n             ...app,\r\n             selectedStatus: app.status // Initialize dropdown selection\r\n         }));\r\n        setApplicants(initialApplicants);\r\n      } else {\r\n        setApplicants([]); // Set empty if no applicants data\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error(\"Error fetching data:\", err);\r\n      // Handle specific errors (e.g., 401 Unauthorized)\r\n      if (err.response?.status === 401) {\r\n        setError(\"Authentication error. Please log in again.\");\r\n        // Optionally redirect to login\r\n      } else {\r\n        setError(`Error loading data: ${err.response?.data?.message || err.message}`);\r\n      }\r\n      setClub(null); // Clear club state on error\r\n      setApplicants([]); // Clear applicants state on error\r\n    } finally {\r\n      setLoading(false); // Ensure loading is set to false\r\n    }\r\n  }, [semester]); // Re-run if semester changes\r\n\r\n  // Fetch data on component mount and when semester changes\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]); // Use fetchData in dependency array\r\n\r\n  // Handle change in the status dropdown for an applicant\r\n  const handleStatusChange = (uid, newSelectedStatus) => {\r\n    setApplicants(prevApplicants =>\r\n      prevApplicants.map(app =>\r\n        app.uid === uid ? { ...app, selectedStatus: newSelectedStatus } : app\r\n      )\r\n    );\r\n  };\r\n\r\n  // Handle submission of the status update for a single applicant\r\n  const handleSubmitUpdate = async (uid) => {\r\n    if (!club) {\r\n      setError(\"Cannot update applicant: Club data not loaded.\");\r\n      return;\r\n    }\r\n\r\n    // Find the applicant in the current state to get their selectedStatus\r\n    const applicantToUpdate = applicants.find(app => app.uid === uid);\r\n    if (!applicantToUpdate) {\r\n        setError(\"Applicant not found for update.\");\r\n        return;\r\n    }\r\n\r\n    const newStatus = applicantToUpdate.selectedStatus; // The status selected in the dropdown\r\n\r\n    // Disable button temporarily? (Optional: add isUpdating state per applicant)\r\n    // setApplicants(prev => prev.map(a => a.uid === uid ? {...a, isUpdating: true} : a));\r\n\r\n    setError(''); // Clear previous errors specific to this action\r\n\r\n    try {\r\n      await axios.post('http://localhost:3001/api/recruitment/evaluate', {\r\n        clubId: club._id, // Club's ObjectId\r\n        semester,\r\n        uid,\r\n        action: newStatus // Send the selected status as the action\r\n      });\r\n\r\n      // Update the 'status' field in the local state to reflect the successful update\r\n      // The 'selectedStatus' already matches, but 'status' represents the confirmed state\r\n      setApplicants(prevApplicants =>\r\n        prevApplicants.map(app =>\r\n          app.uid === uid ? { ...app, status: newStatus /*, isUpdating: false*/ } : app\r\n        )\r\n      );\r\n      // Maybe show a success message briefly?\r\n\r\n    } catch (err) {\r\n      console.error(\"Error updating applicant status:\", err);\r\n      setError(`Error updating status for UID ${uid}: ${err.response?.data?.message || err.message}`);\r\n      // Re-enable button if disabled\r\n      // setApplicants(prev => prev.map(a => a.uid === uid ? {...a, isUpdating: false} : a));\r\n    }\r\n  };\r\n\r\n  // Calculate counts based on the *confirmed* status\r\n  const counts = {\r\n    pending: applicants.filter(a => a.status === 'pending').length,\r\n    approved: applicants.filter(a => a.status === 'approved').length,\r\n    rejected: applicants.filter(a => a.status === 'rejected').length,\r\n  };\r\n\r\n  // Filter applicants based on search term (name or UID)\r\n  const filteredApplicants = applicants.filter(a =>\r\n    a.uname.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    a.uid.toString().includes(searchTerm)\r\n  );\r\n\r\n  // Render Loading State\r\n  if (loading) {\r\n    return <div className={styles.loading}>Loading applicant data...</div>;\r\n  }\r\n\r\n  // Render Error State\r\n  if (error && !club) { // Show general error if club loading failed\r\n      return <div className={styles.error}>{error}</div>;\r\n  }\r\n\r\n  // Main Render Logic\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>\r\n        <h2>Evaluate Applicants ({semester})</h2>\r\n        <h4>Club: {club?.cname || 'N/A'}</h4>\r\n         {/* Display specific update errors here */}\r\n         {error && <p className={styles.error}>{error}</p>}\r\n        <p className={styles.stats}>\r\n          Pending: {counts.pending} | Approved: {counts.approved} | Rejected: {counts.rejected} | Total: {applicants.length}\r\n        </p>\r\n      </div>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search by name or ID...\"\r\n        value={searchTerm}\r\n        onChange={e => setSearchTerm(e.target.value)}\r\n        className={styles.searchBox}\r\n        disabled={!club} // Disable if club data isn't loaded\r\n      />\r\n\r\n      {/* Display applicants in a grid */}\r\n      <div className={styles.applicantsGrid}>\r\n        {filteredApplicants.length > 0 ? (\r\n          filteredApplicants.map(app => (\r\n            <div key={app.uid} className={styles.applicantCard}>\r\n              <h5 className={styles.applicantName}>{app.uname} (ID: {app.uid})</h5>\r\n              <div className={styles.applicantInfo}>\r\n                <p><strong>Email:</strong> {app.umail || 'N/A'}</p>\r\n                <p><strong>Mobile:</strong> {app.umobile || 'N/A'}</p>\r\n                <p><strong>Gender:</strong> {app.ugender || 'N/A'}</p>\r\n                <p><strong>Major:</strong> {app.major || 'N/A'}</p>\r\n                <p><strong>Semester:</strong> {app.semester || 'N/A'}</p>\r\n                <p><strong>Status:</strong> {app.status}</p> {/* Display confirmed status */}\r\n              </div>\r\n\r\n              {/* Controls for updating status */}\r\n              <div className={styles.controls}>\r\n                <select\r\n                  value={app.selectedStatus} // Bind to the temporary selected status\r\n                  onChange={e => handleStatusChange(app.uid, e.target.value)}\r\n                  className={styles.statusSelect}\r\n                  // disabled={app.isUpdating} // Optional: disable while updating\r\n                >\r\n                  <option value=\"pending\">Pending</option>\r\n                  <option value=\"approved\">Approved</option>\r\n                  <option value=\"rejected\">Rejected</option>\r\n                </select>\r\n                <button\r\n                  onClick={() => handleSubmitUpdate(app.uid)}\r\n                  className={styles.submitButton}\r\n                  // disabled={app.isUpdating || app.status === app.selectedStatus} // Optional: disable if no change or updating\r\n                  disabled={app.status === app.selectedStatus} // Disable if status hasn't changed\r\n                >\r\n                  Submit Update\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No applicants found matching your criteria.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EvaluateApplicants;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}