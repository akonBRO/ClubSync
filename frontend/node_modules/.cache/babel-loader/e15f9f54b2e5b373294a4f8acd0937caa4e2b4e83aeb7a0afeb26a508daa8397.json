{"ast":null,"code":"var _jsxFileName = \"E:\\\\ClubSync\\\\frontend\\\\src\\\\students\\\\UpcomingEvents.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/students/UpcomingEvents.js\nimport React, { useState, useEffect, useContext /* or useSelector if using Redux */ } from 'react';\nimport axios from 'axios';\nimport styles from './UpcomingEvents.module.css';\nimport { FaCalendarAlt, FaClock, FaMapMarkerAlt, FaUniversity, FaInfoCircle, FaSearch, FaFilter, FaUserCheck, FaExclamationCircle } from 'react-icons/fa';\nimport { BeatLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UpcomingEvents() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedClub, setSelectedClub] = useState('');\n  const [allClubs, setAllClubs] = useState([]);\n  const [registrationStatus, setRegistrationStatus] = useState({});\n\n  // --- Get Logged-in Student Info ---\n  // Ensure this function accurately reads the UID stored during login\n  const getStudentUidFromStorage = () => {\n    try {\n      const storedUid = localStorage.getItem('studentUid'); // <-- Ensure this key matches\n      if (storedUid) {\n        const uidAsNumber = parseInt(storedUid, 10); // <-- Parse as integer\n        if (!isNaN(uidAsNumber)) {\n          return uidAsNumber; // Return the numeric UID\n        } else {\n          console.error(\"Stored studentUid is not a valid number:\", storedUid);\n          return null;\n        }\n      }\n    } catch (e) {\n      console.error(\"Error reading student info from localStorage\", e);\n    }\n    return null; // Return null if not found or error\n  };\n  const loggedInStudentUid = getStudentUidFromStorage(); // Get UID when component renders\n\n  // --- Check Authentication on Mount (Optional but Recommended) ---\n  // This useEffect is useful for debugging but the primary auth is backend\n  useEffect(() => {\n    if (!loggedInStudentUid) {\n      console.warn(\"UpcomingEvents: No logged-in student UID found from storage.\");\n      // You could fetch from /api/student/auth/check-auth here if needed\n      // to verify the session is actually active even if localStorage is empty\n    } else {\n      console.log(\"UpcomingEvents: Logged-in student UID found from storage:\", loggedInStudentUid);\n    }\n  }, [loggedInStudentUid]); // Re-check if UID changes (e.g., after login)\n\n  // --- Fetch Approved Events ---\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    // Backend route now protected by authStudent middleware\n    axios.get('http://localhost:3001/api/student/events/upcoming', {\n      withCredentials: true\n    }).then(response => {\n      const sortedEvents = response.data.sort((a, b) => new Date(a.event_date) - new Date(b.event_date));\n      setEvents(sortedEvents);\n      setFilteredEvents(sortedEvents);\n      const clubs = [...new Set(sortedEvents.map(event => event.club_name))];\n      setAllClubs(clubs.sort());\n    }).catch(err => {\n      console.error(\"Error fetching upcoming events:\", err);\n      if (err.response) {\n        console.error(\"Error data:\", err.response.data);\n        console.error(\"Error status:\", err.response.status);\n        // Handle 401 specifically - this means the backend middleware rejected the request\n        if (err.response.status === 401) {\n          setError(\"You must be logged in to view upcoming events.\");\n          // Optionally, trigger a logout action or redirect to login\n          console.log(\"Received 401, potentially session expired or invalid cookie.\");\n        } else {\n          setError(err.response.data.message || `Error: ${err.response.status}`);\n        }\n      } else if (err.request) {\n        console.error(\"Error request:\", err.request);\n        setError(\"Could not connect to server. Is it running on port 3001?\");\n      } else {\n        console.error('Error message:', err.message);\n        setError(`An error occurred: ${err.message}`);\n      }\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []); // Fetch on mount\n\n  // --- Filter Events ---\n  useEffect(() => {\n    let currentEvents = [...events];\n    if (searchTerm.trim()) {\n      currentEvents = currentEvents.filter(event => event.eid.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n    if (selectedClub) {\n      currentEvents = currentEvents.filter(event => event.club_name === selectedClub);\n    }\n    setFilteredEvents(currentEvents);\n  }, [searchTerm, selectedClub, events]);\n\n  // --- Handle Event Registration ---\n  const handleRegister = (eventId, eventName) => {\n    // Frontend check: Ensure UID is available before attempting registration\n    if (!loggedInStudentUid) {\n      alert('Could not identify student. Please ensure you are logged in.');\n      // Consider redirecting to login page here\n      return;\n    }\n    const confirmation = window.confirm(`Are you sure you want to register for \"${eventName}\"?`);\n    if (confirmation) {\n      setRegistrationStatus(prev => ({\n        ...prev,\n        [eventId]: {\n          loading: true\n        }\n      }));\n\n      // POST request - Backend uses session for UID\n      axios.post(`http://localhost:3001/api/student/events/register/${eventId}`, {},\n      // Send an empty object as body data\n      {\n        withCredentials: true\n      } // Crucial for sending session cookie\n      ).then(response => {\n        console.log('Registration successful/status:', response.data);\n        const message = response.data.message || 'Registration successful!';\n        const isAlreadyRegistered = response.data.alreadyRegistered || false;\n        setRegistrationStatus(prev => ({\n          ...prev,\n          [eventId]: {\n            success: true,\n            message: message\n          }\n        }));\n\n        // Update frontend state if registration was successful (not already registered)\n        if (!isAlreadyRegistered) {\n          setEvents(prevEvents => prevEvents.map(event => {\n            if (event._id === eventId) {\n              const currentRegStd = Array.isArray(event.reg_std) ? event.reg_std : [];\n              // Add UID if not already present (shouldn't be based on backend response)\n              const updatedRegStd = currentRegStd.includes(loggedInStudentUid) ? currentRegStd : [...currentRegStd, loggedInStudentUid];\n              return {\n                ...event,\n                reg_std: updatedRegStd\n              };\n            }\n            return event;\n          }));\n        }\n        setTimeout(() => {\n          setRegistrationStatus(prev => ({\n            ...prev,\n            [eventId]: undefined\n          }));\n        }, 5000);\n      }).catch(err => {\n        var _err$response;\n        console.error(\"Error registering for event:\", err);\n        let errorMessage = 'Registration failed. Please try again.';\n        if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n          errorMessage = \"Authentication failed during registration. Please log in again.\";\n          // Consider triggering logout/redirect logic here\n        } else {\n          var _err$response2, _err$response2$data;\n          errorMessage = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || errorMessage;\n        }\n        setRegistrationStatus(prev => ({\n          ...prev,\n          [eventId]: {\n            error: true,\n            message: errorMessage\n          }\n        }));\n        setTimeout(() => {\n          setRegistrationStatus(prev => ({\n            ...prev,\n            [eventId]: undefined\n          }));\n        }, 7000);\n      });\n    }\n  };\n\n  // --- Helper formatDateTime (remains the same) ---\n  const formatDateTime = (dateString, timeSlots) => {\n    const date = new Date(dateString);\n    const formattedDate = date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      weekday: 'long'\n    });\n    const formattedTime = (timeSlots === null || timeSlots === void 0 ? void 0 : timeSlots.join(' / ')) || 'Time TBD';\n    return `${formattedDate} at ${formattedTime}`;\n  };\n\n  // --- JSX Rendering ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.upcomingEventsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this), \" Upcoming Approved Events\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.controls\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.centeredMessage,\n      children: [/*#__PURE__*/_jsxDEV(BeatLoader, {\n        color: \"#4A90E2\",\n        loading: loading,\n        size: 15\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 65\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading events...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 123\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }, this), error && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.centeredMessage} ${styles.errorMessage}`,\n      children: [/*#__PURE__*/_jsxDEV(FaExclamationCircle, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 103\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 136\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 35\n    }, this), !loading && !error && filteredEvents.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.centeredMessage,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: events.length === 0 ? \"No upcoming events found.\" : \"No events match your current search/filter.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 107\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 67\n    }, this), !loading && !error && filteredEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.eventsGrid,\n      children: filteredEvents.map(event => {\n        var _event$event_details, _event$event_details2;\n        // Check registration status using the UID retrieved earlier\n        const isRegistered = loggedInStudentUid && Array.isArray(event.reg_std) && event.reg_std.includes(loggedInStudentUid);\n        const regInfo = registrationStatus[event._id]; // Get registration status for this event\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.eventCard,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: event.event_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.eventMeta,\n            children: [/*#__PURE__*/_jsxDEV(FaUniversity, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 65\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Club:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 82\n            }, this), \" \", event.club_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.eventMeta,\n            children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 65\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date & Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 83\n            }, this), \" \", formatDateTime(event.event_date, event.time_slots)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.eventMeta,\n            children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 65\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 84\n            }, this), \" Room \", event.room_number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.eventMeta,\n            children: [/*#__PURE__*/_jsxDEV(FaInfoCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 65\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"EID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 82\n            }, this), \" \", event.eid]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.eventDetails,\n            children: [(_event$event_details = event.event_details) === null || _event$event_details === void 0 ? void 0 : _event$event_details.substring(0, 100), ((_event$event_details2 = event.event_details) === null || _event$event_details2 === void 0 ? void 0 : _event$event_details2.length) > 100 ? '...' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 33\n          }, this), event.std_reg === 'Yes' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.registrationArea,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${styles.registerButton} ${isRegistered ? styles.registered : ''} ${regInfo !== null && regInfo !== void 0 && regInfo.loading ? styles.loading : ''}`,\n              onClick: () => !isRegistered && !(regInfo !== null && regInfo !== void 0 && regInfo.loading) && loggedInStudentUid && handleRegister(event._id, event.event_name) // Added loggedInStudentUid check\n              ,\n              disabled: isRegistered || (regInfo === null || regInfo === void 0 ? void 0 : regInfo.loading) || !loggedInStudentUid,\n              title: !loggedInStudentUid ? \"Please log in to register\" : isRegistered ? \"You are already registered\" : `Register for ${event.event_name}`,\n              children: regInfo !== null && regInfo !== void 0 && regInfo.loading ? /*#__PURE__*/_jsxDEV(BeatLoader, {\n                size: 8,\n                color: \"#fff\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 65\n              }, this) : isRegistered ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\" \", /*#__PURE__*/_jsxDEV(FaUserCheck, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 123\n                }, this), \" Registered \"]\n              }, void 0, true) : 'Register Now'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 41\n            }, this), (regInfo === null || regInfo === void 0 ? void 0 : regInfo.success) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.regSuccess,\n              children: regInfo.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 62\n            }, this), (regInfo === null || regInfo === void 0 ? void 0 : regInfo.error) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.regError,\n              children: regInfo.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 60\n            }, this), !loggedInStudentUid && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.regMessage,\n              children: \"Log in to register.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 37\n          }, this), event.std_reg !== 'Yes' && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.noRegistration,\n            children: \"Registration not available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 37\n          }, this)]\n        }, event._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(UpcomingEvents, \"QMeNqPwwflPgq/0ymsQmAuFAhw4=\");\n_c = UpcomingEvents;\nexport default UpcomingEvents;\nvar _c;\n$RefreshReg$(_c, \"UpcomingEvents\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","styles","FaCalendarAlt","FaClock","FaMapMarkerAlt","FaUniversity","FaInfoCircle","FaSearch","FaFilter","FaUserCheck","FaExclamationCircle","BeatLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","UpcomingEvents","_s","events","setEvents","filteredEvents","setFilteredEvents","loading","setLoading","error","setError","searchTerm","setSearchTerm","selectedClub","setSelectedClub","allClubs","setAllClubs","registrationStatus","setRegistrationStatus","getStudentUidFromStorage","storedUid","localStorage","getItem","uidAsNumber","parseInt","isNaN","console","e","loggedInStudentUid","warn","log","get","withCredentials","then","response","sortedEvents","data","sort","a","b","Date","event_date","clubs","Set","map","event","club_name","catch","err","status","message","request","finally","currentEvents","trim","filter","eid","toLowerCase","includes","handleRegister","eventId","eventName","alert","confirmation","window","confirm","prev","post","isAlreadyRegistered","alreadyRegistered","success","prevEvents","_id","currentRegStd","Array","isArray","reg_std","updatedRegStd","setTimeout","undefined","_err$response","errorMessage","_err$response2","_err$response2$data","formatDateTime","dateString","timeSlots","date","formattedDate","toLocaleDateString","year","month","day","weekday","formattedTime","join","className","upcomingEventsContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","controls","centeredMessage","color","size","length","eventsGrid","_event$event_details","_event$event_details2","isRegistered","regInfo","eventCard","event_name","eventMeta","time_slots","room_number","eventDetails","event_details","substring","std_reg","registrationArea","registerButton","registered","onClick","disabled","title","regSuccess","regError","regMessage","noRegistration","_c","$RefreshReg$"],"sources":["E:/ClubSync/frontend/src/students/UpcomingEvents.jsx"],"sourcesContent":["// frontend/src/students/UpcomingEvents.js\r\nimport React, { useState, useEffect, useContext /* or useSelector if using Redux */ } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './UpcomingEvents.module.css';\r\nimport { FaCalendarAlt, FaClock, FaMapMarkerAlt, FaUniversity, FaInfoCircle, FaSearch, FaFilter, FaUserCheck, FaExclamationCircle } from 'react-icons/fa';\r\nimport { BeatLoader } from 'react-spinners';\r\n\r\nfunction UpcomingEvents() {\r\nconst [events, setEvents] = useState([]);\r\nconst [filteredEvents, setFilteredEvents] = useState([]);\r\nconst [loading, setLoading] = useState(true);\r\nconst [error, setError] = useState(null);\r\nconst [searchTerm, setSearchTerm] = useState('');\r\nconst [selectedClub, setSelectedClub] = useState('');\r\nconst [allClubs, setAllClubs] = useState([]);\r\nconst [registrationStatus, setRegistrationStatus] = useState({});\r\n\r\n// --- Get Logged-in Student Info ---\r\n// Ensure this function accurately reads the UID stored during login\r\nconst getStudentUidFromStorage = () => {\r\n    try {\r\n       const storedUid = localStorage.getItem('studentUid'); // <-- Ensure this key matches\r\n       if (storedUid) {\r\n            const uidAsNumber = parseInt(storedUid, 10); // <-- Parse as integer\r\n            if (!isNaN(uidAsNumber)) {\r\n                return uidAsNumber; // Return the numeric UID\r\n            } else {\r\n               console.error(\"Stored studentUid is not a valid number:\", storedUid);\r\n               return null;\r\n            }\r\n\r\n       }\r\n    } catch (e) {\r\n        console.error(\"Error reading student info from localStorage\", e);\r\n    }\r\n    return null; // Return null if not found or error\r\n};\r\nconst loggedInStudentUid = getStudentUidFromStorage(); // Get UID when component renders\r\n\r\n// --- Check Authentication on Mount (Optional but Recommended) ---\r\n// This useEffect is useful for debugging but the primary auth is backend\r\nuseEffect(() => {\r\n    if (!loggedInStudentUid) {\r\n            console.warn(\"UpcomingEvents: No logged-in student UID found from storage.\");\r\n             // You could fetch from /api/student/auth/check-auth here if needed\r\n             // to verify the session is actually active even if localStorage is empty\r\n    } else {\r\n        console.log(\"UpcomingEvents: Logged-in student UID found from storage:\", loggedInStudentUid);\r\n    }\r\n}, [loggedInStudentUid]); // Re-check if UID changes (e.g., after login)\r\n\r\n// --- Fetch Approved Events ---\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        setError(null);\r\n        // Backend route now protected by authStudent middleware\r\n        axios.get('http://localhost:3001/api/student/events/upcoming', { withCredentials: true })\r\n            .then(response => {\r\n                const sortedEvents = response.data.sort((a, b) => new Date(a.event_date) - new Date(b.event_date));\r\n                setEvents(sortedEvents);\r\n                setFilteredEvents(sortedEvents);\r\n                const clubs = [...new Set(sortedEvents.map(event => event.club_name))];\r\n                setAllClubs(clubs.sort());\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error fetching upcoming events:\", err);\r\n               if (err.response) {\r\n                    console.error(\"Error data:\", err.response.data);\r\n                    console.error(\"Error status:\", err.response.status);\r\n                    // Handle 401 specifically - this means the backend middleware rejected the request\r\n                    if (err.response.status === 401) {\r\n                        setError(\"You must be logged in to view upcoming events.\");\r\n                        // Optionally, trigger a logout action or redirect to login\r\n                         console.log(\"Received 401, potentially session expired or invalid cookie.\");\r\n                    } else {\r\n                        setError(err.response.data.message || `Error: ${err.response.status}`);\r\n                    }\r\n               } else if (err.request) {\r\n                    console.error(\"Error request:\", err.request);\r\n                    setError(\"Could not connect to server. Is it running on port 3001?\");\r\n               } else {\r\n                    console.error('Error message:', err.message);\r\n                    setError(`An error occurred: ${err.message}`);\r\n               }\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n}, []); // Fetch on mount\r\n\r\n// --- Filter Events ---\r\n    useEffect(() => {\r\n        let currentEvents = [...events];\r\n        if (searchTerm.trim()) {\r\n            currentEvents = currentEvents.filter(event =>\r\n                event.eid.toLowerCase().includes(searchTerm.toLowerCase())\r\n            );\r\n        }\r\n        if (selectedClub) {\r\n            currentEvents = currentEvents.filter(event =>\r\n                event.club_name === selectedClub\r\n            );\r\n        }\r\n        setFilteredEvents(currentEvents);\r\n    }, [searchTerm, selectedClub, events]);\r\n\r\n\r\n// --- Handle Event Registration ---\r\nconst handleRegister = (eventId, eventName) => {\r\n    // Frontend check: Ensure UID is available before attempting registration\r\n    if (!loggedInStudentUid) {\r\n        alert('Could not identify student. Please ensure you are logged in.');\r\n        // Consider redirecting to login page here\r\n        return;\r\n    }\r\n\r\n    const confirmation = window.confirm(`Are you sure you want to register for \"${eventName}\"?`);\r\n    if (confirmation) {\r\n        setRegistrationStatus(prev => ({ ...prev, [eventId]: { loading: true } }));\r\n\r\n        // POST request - Backend uses session for UID\r\n        axios.post(`http://localhost:3001/api/student/events/register/${eventId}`,\r\n            {}, // Send an empty object as body data\r\n            { withCredentials: true } // Crucial for sending session cookie\r\n        )\r\n        .then(response => {\r\n            console.log('Registration successful/status:', response.data);\r\n            const message = response.data.message || 'Registration successful!';\r\n            const isAlreadyRegistered = response.data.alreadyRegistered || false;\r\n\r\n            setRegistrationStatus(prev => ({ ...prev, [eventId]: { success: true, message: message } }));\r\n\r\n            // Update frontend state if registration was successful (not already registered)\r\n            if (!isAlreadyRegistered) {\r\n                    setEvents(prevEvents => prevEvents.map(event => {\r\n                    if (event._id === eventId) {\r\n                        const currentRegStd = Array.isArray(event.reg_std) ? event.reg_std : [];\r\n                        // Add UID if not already present (shouldn't be based on backend response)\r\n                        const updatedRegStd = currentRegStd.includes(loggedInStudentUid)\r\n                            ? currentRegStd\r\n                            : [...currentRegStd, loggedInStudentUid];\r\n                        return { ...event, reg_std: updatedRegStd };\r\n                    }\r\n                    return event;\r\n                    }));\r\n            }\r\n\r\n                 setTimeout(() => {\r\n                 setRegistrationStatus(prev => ({...prev, [eventId]: undefined}));\r\n                 }, 5000);\r\n        })\r\n        .catch(err => {\r\n            console.error(\"Error registering for event:\", err);\r\n            let errorMessage = 'Registration failed. Please try again.';\r\n                 if (err.response?.status === 401) {\r\n                     errorMessage = \"Authentication failed during registration. Please log in again.\";\r\n                     // Consider triggering logout/redirect logic here\r\n                 } else {\r\n                     errorMessage = err.response?.data?.message || errorMessage;\r\n                 }\r\n            setRegistrationStatus(prev => ({ ...prev, [eventId]: { error: true, message: errorMessage } }));\r\n                 setTimeout(() => {\r\n                 setRegistrationStatus(prev => ({...prev, [eventId]: undefined}));\r\n                 }, 7000);\r\n        });\r\n    }\r\n};\r\n\r\n// --- Helper formatDateTime (remains the same) ---\r\n    const formatDateTime = (dateString, timeSlots) => {\r\n    const date = new Date(dateString);\r\n    const formattedDate = date.toLocaleDateString('en-US', {\r\n        year: 'numeric', month: 'long', day: 'numeric', weekday: 'long'\r\n    });\r\n    const formattedTime = timeSlots?.join(' / ') || 'Time TBD';\r\n    return `${formattedDate} at ${formattedTime}`;\r\n    };\r\n\r\n// --- JSX Rendering ---\r\nreturn (\r\n    <div className={styles.upcomingEventsContainer}>\r\n        <h1><FaCalendarAlt /> Upcoming Approved Events</h1>\r\n\r\n        {/* Search and Filter Controls (remain the same) */}\r\n            <div className={styles.controls}>\r\n                {/* ... search input ... */}\r\n                {/* ... filter dropdown ... */}\r\n            </div>\r\n\r\n\r\n            {/* Loading State */}\r\n            {loading && <div className={styles.centeredMessage}><BeatLoader color=\"#4A90E2\" loading={loading} size={15} /><p>Loading events...</p></div>}\r\n\r\n            {/* Error State */}\r\n            {error && !loading && <div className={`${styles.centeredMessage} ${styles.errorMessage}`}><FaExclamationCircle size={24} /><p>{error}</p></div>}\r\n\r\n            {/* No Events Found State */}\r\n            {!loading && !error && filteredEvents.length === 0 && <div className={styles.centeredMessage}><p>{events.length === 0 ? \"No upcoming events found.\" : \"No events match your current search/filter.\"}</p></div>}\r\n\r\n\r\n            {/* Events Grid */}\r\n            {!loading && !error && filteredEvents.length > 0 && (\r\n                <div className={styles.eventsGrid}>\r\n                    {filteredEvents.map(event => {\r\n                        // Check registration status using the UID retrieved earlier\r\n                        const isRegistered = loggedInStudentUid && Array.isArray(event.reg_std) && event.reg_std.includes(loggedInStudentUid);\r\n                        const regInfo = registrationStatus[event._id]; // Get registration status for this event\r\n\r\n                        return (\r\n                            <div key={event._id} className={styles.eventCard}>\r\n                                <h3>{event.event_name}</h3>\r\n                                <p className={styles.eventMeta}><FaUniversity /> <strong>Club:</strong> {event.club_name}</p>\r\n                                <p className={styles.eventMeta}><FaCalendarAlt /> <strong>Date & Time:</strong> {formatDateTime(event.event_date, event.time_slots)}</p>\r\n                                <p className={styles.eventMeta}><FaMapMarkerAlt /> <strong>Location:</strong> Room {event.room_number}</p>\r\n                                <p className={styles.eventMeta}><FaInfoCircle /> <strong>EID:</strong> {event.eid}</p>\r\n                                <p className={styles.eventDetails}>{event.event_details?.substring(0, 100)}{event.event_details?.length > 100 ? '...' : ''}</p>\r\n\r\n\r\n                                {/* Registration Button Area (Updated logic) */}\r\n                                {event.std_reg === 'Yes' && (\r\n                                    <div className={styles.registrationArea}>\r\n                                        <button\r\n                                            className={`${styles.registerButton} ${isRegistered ? styles.registered : ''} ${regInfo?.loading ? styles.loading : ''}`}\r\n                                            onClick={() => !isRegistered && !regInfo?.loading && loggedInStudentUid && handleRegister(event._id, event.event_name)} // Added loggedInStudentUid check\r\n                                            disabled={isRegistered || regInfo?.loading || !loggedInStudentUid}\r\n                                            title={!loggedInStudentUid ? \"Please log in to register\" : (isRegistered ? \"You are already registered\" : `Register for ${event.event_name}`)}\r\n                                        >\r\n                                            {regInfo?.loading ? <BeatLoader size={8} color=\"#fff\" /> : (isRegistered ? <> <FaUserCheck /> Registered </> : 'Register Now')}\r\n                                        </button>\r\n                                        {regInfo?.success && <span className={styles.regSuccess}>{regInfo.message}</span>}\r\n                                        {regInfo?.error && <span className={styles.regError}>{regInfo.message}</span>}\r\n                                        {/* Explicitly show \"Log in to register.\" if not logged in */}\r\n                                        {!loggedInStudentUid && <span className={styles.regMessage}>Log in to register.</span>}\r\n                                    </div>\r\n                                )}\r\n                                {event.std_reg !== 'Yes' && (\r\n                                    <p className={styles.noRegistration}>Registration not available</p>\r\n                                )}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            )}\r\n        </div>\r\n);\r\n}\r\n\r\nexport default UpcomingEvents;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}