{"ast":null,"code":"var _jsxFileName = \"E:\\\\ClubSync\\\\frontend\\\\src\\\\pages\\\\EventBooking.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Calendar, Clock, MapPin, Users, FileText, CheckCircle, Info, Book, AlertTriangle, Loader // Added Loader and AlertTriangle\n} from 'lucide-react'; // Using lucide-react as provided\nimport './EventBooking.css'; // We will update this file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventBooking = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    club_name: '',\n    // Fetch dynamically\n    event_name: '',\n    event_date: '',\n    time_slots: [],\n    room_number: '',\n    std_reg: '',\n    event_details: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [submitLoading, setSubmitLoading] = useState(false); // Loading state for submission\n  const [formError, setFormError] = useState(''); // State for inline form errors\n  const [formSuccess, setFormSuccess] = useState(''); // State for success message\n\n  // Available time slots and room numbers (Keep as is)\n  const [availableTimeSlots] = useState(['09:30 AM-10:50 AM', '11:00 AM-12:20 PM', '12:30 PM-01:50 PM', '02:00 PM - 03:20 PM', '03:30 PM - 04:50 PM', '05:00 PM - 06:20 PM']);\n  const roomNumbers = ['12B-30L', '12B-31L', '12D-26L', '12D-27L', '12D-28L', 'Club Room 1', 'Club Room 2', 'Club Room 3', 'Club Room 4', 'Lecture Theatre 1', 'Lecture Theatre 2', 'Lecture Theatre 3', 'Multi Purpose Hall', 'Auditorium'];\n  const [minDate, setMinDate] = useState('');\n\n  // --- useEffect to fetch club name and set min date (Keep logic) ---\n  useEffect(() => {\n    setLoading(true);\n    axios.get('http://localhost:3001/api/clubs/dashboard', {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.clubName) {\n        setFormData(prev => ({\n          ...prev,\n          club_name: response.data.clubName\n        }));\n      } else {\n        setFormData(prev => ({\n          ...prev,\n          club_name: 'Default Club'\n        })); // Fallback\n      }\n    }).catch(error => {\n      console.error('Error fetching club name:', error);\n      setFormData(prev => ({\n        ...prev,\n        club_name: 'Error Loading Club'\n      })); // Show error\n    }).finally(() => setLoading(false));\n    const today = new Date();\n    today.setDate(today.getDate() + 5);\n    const minDateString = today.toISOString().split('T')[0];\n    setMinDate(minDateString);\n  }, []);\n\n  // --- Handlers (Keep logic, minor class adjustments if needed) ---\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // Clear messages on change\n    setFormError('');\n    setFormSuccess('');\n  };\n  const handleDateChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // Clear messages on change\n    setFormError('');\n    setFormSuccess('');\n  };\n  const handleTimeSlotChange = slot => {\n    setFormData(prev => {\n      let selectedSlots = prev.time_slots;\n      if (selectedSlots.includes(slot)) {\n        selectedSlots = selectedSlots.filter(s => s !== slot);\n      } else if (selectedSlots.length < 2) {\n        selectedSlots = [...selectedSlots, slot];\n      }\n      // Clear messages on change\n      setFormError('');\n      setFormSuccess('');\n      return {\n        ...prev,\n        time_slots: selectedSlots\n      };\n    });\n  };\n\n  // --- Submit Handler (Keep logic, add loading and better feedback) ---\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setFormError(''); // Clear previous errors\n    setFormSuccess(''); // Clear previous success\n\n    const {\n      event_name,\n      event_date,\n      time_slots,\n      room_number,\n      std_reg,\n      event_details\n    } = formData;\n    if (!event_name || !event_date || time_slots.length === 0 || !room_number || !std_reg || !event_details) {\n      setFormError('All fields marked with * are required.');\n      return;\n    }\n    if (event_date < minDate) {\n      setFormError('Event date must be at least 5 days from today.');\n      return;\n    }\n    if (time_slots.length > 2) {\n      // Should be prevented by UI, but double-check\n      setFormError('You can select a maximum of two time slots.');\n      return;\n    }\n    setSubmitLoading(true); // Start submit loading\n\n    try {\n      const response = await axios.post('http://localhost:3001/api/events/booking', formData);\n      // Use state for success message instead of alert\n      setFormSuccess(`Booking Successful! Your Booking ID: ${response.data.bookingId}. The form has been reset.`);\n      // Reset form after successful submission\n      setFormData({\n        club_name: formData.club_name,\n        // Keep club name\n        event_name: '',\n        event_date: '',\n        time_slots: [],\n        room_number: '',\n        std_reg: '',\n        event_details: ''\n      });\n    } catch (error) {\n      console.error('Error while submitting event:', error);\n      // Use state for error message instead of alert\n      if (error.response && error.response.data.message) {\n        setFormError(`Booking failed: ${error.response.data.message}`);\n      } else {\n        setFormError('Booking failed. Please check the details or try again later.');\n      }\n    } finally {\n      setSubmitLoading(false); // Stop submit loading\n    }\n  };\n\n  // --- Initial Loading State ---\n  if (loading) {\n    return (\n      /*#__PURE__*/\n      // Consistent loading style\n      _jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(Loader, {\n          className: \"spinner\",\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), \" Loading Booking Form...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n  // --- Main Render ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-heading\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Book, {\n        size: 32,\n        className: \"heading-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), \" \", \"Book an Event\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), formError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-error mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 67\n      }, this), \" \", formError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 27\n    }, this), formSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 71\n      }, this), \" \", formSuccess]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"booking-form\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"club_name\",\n          children: [/*#__PURE__*/_jsxDEV(Users, {\n            size: 18,\n            className: \"label-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), \" Club Name\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"club_name\",\n          name: \"club_name\",\n          value: formData.club_name,\n          readOnly: true,\n          className: \"form-input readonly\" // Specific class for readonly\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"event_name\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            size: 18,\n            className: \"label-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), \" Event Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-star\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 82\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"event_name\",\n          name: \"event_name\",\n          value: formData.event_name,\n          onChange: handleChange,\n          required: true,\n          className: \"form-input\",\n          placeholder: \"e.g., Annual Tech Fest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"event_date\",\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            size: 18,\n            className: \"label-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), \" Event Date \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-star\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 82\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"event_date\",\n          name: \"event_date\",\n          value: formData.event_date,\n          onChange: handleDateChange,\n          required: true,\n          min: minDate,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), formData.event_date && formData.event_date < minDate && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"inline-error-message\",\n          children: [/*#__PURE__*/_jsxDEV(Info, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), \" Event date must be at least 5 days from today.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            size: 18,\n            className: \"label-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), \" Time Slot(s) (Max 2) \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-star\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 89\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-slots-container\",\n          children: availableTimeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\"\n            // Apply dynamic classes based on state\n            ,\n            className: `time-slot-button ${formData.time_slots.includes(slot) ? 'selected' : ''} ${formData.time_slots.length >= 2 && !formData.time_slots.includes(slot) ? 'disabled' : ''}`,\n            onClick: () => handleTimeSlotChange(slot)\n            // Disable button if max slots reached and this one isn't selected\n            ,\n            disabled: formData.time_slots.length >= 2 && !formData.time_slots.includes(slot),\n            children: [slot, formData.time_slots.includes(slot) && /*#__PURE__*/_jsxDEV(CheckCircle, {\n              size: 16,\n              className: \"slot-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 72\n            }, this)]\n          }, slot, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), formData.time_slots.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"helper-text mt-2\",\n          children: [\"Selected: \", formData.time_slots.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this), formData.time_slots.length >= 2 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"helper-text-warning mt-1\",\n          children: [/*#__PURE__*/_jsxDEV(Info, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this), \" Maximum two time slots reached.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"room_number\",\n          children: [/*#__PURE__*/_jsxDEV(MapPin, {\n            size: 18,\n            className: \"label-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this), \" Room/Venue \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-star\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 80\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"room_number\",\n          name: \"room_number\",\n          value: formData.room_number,\n          onChange: handleChange,\n          required: true,\n          className: \"form-select\" // Use consistent select class\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"-- Select a Room or Venue --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), roomNumbers.map(room => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: room,\n            children: room\n          }, room, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"std_reg\",\n          children: [/*#__PURE__*/_jsxDEV(Users, {\n            size: 18,\n            className: \"label-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this), \" Student Registration Required? \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-star\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 99\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"std_reg\",\n          name: \"std_reg\",\n          value: formData.std_reg,\n          onChange: handleChange,\n          required: true,\n          className: \"form-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"-- Select Yes or No --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"No\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"event_details\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            size: 18,\n            className: \"label-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), \" Event Description \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-star\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 89\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"event_details\",\n          name: \"event_details\",\n          rows: \"5\",\n          value: formData.event_details,\n          onChange: handleChange,\n          required: true,\n          className: \"form-input\" // Use consistent input class\n          ,\n          placeholder: \"Briefly describe the event, purpose, expected audience, etc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary submit-btn\" // Use consistent button classes\n        ,\n        disabled: submitLoading // Disable while submitting\n        ,\n        children: submitLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Loader, {\n            size: 20,\n            className: \"spinner mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 27\n          }, this), \" Submitting...\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 27\n          }, this), \" Submit Booking Request\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_s(EventBooking, \"42pHjUys58/+k5PomqjRyaWEeyU=\");\n_c = EventBooking;\nexport default EventBooking;\nvar _c;\n$RefreshReg$(_c, \"EventBooking\");","map":{"version":3,"names":["React","useState","useEffect","axios","Calendar","Clock","MapPin","Users","FileText","CheckCircle","Info","Book","AlertTriangle","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","EventBooking","_s","formData","setFormData","club_name","event_name","event_date","time_slots","room_number","std_reg","event_details","loading","setLoading","submitLoading","setSubmitLoading","formError","setFormError","formSuccess","setFormSuccess","availableTimeSlots","roomNumbers","minDate","setMinDate","get","withCredentials","then","response","data","clubName","prev","catch","error","console","finally","today","Date","setDate","getDate","minDateString","toISOString","split","handleChange","e","name","value","target","handleDateChange","handleTimeSlotChange","slot","selectedSlots","includes","filter","s","length","handleSubmit","preventDefault","post","bookingId","message","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","readOnly","onChange","required","placeholder","min","map","onClick","disabled","join","room","rows","_c","$RefreshReg$"],"sources":["E:/ClubSync/frontend/src/pages/EventBooking.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    Calendar, Clock, MapPin, Users, FileText, CheckCircle, Info, Book, AlertTriangle, Loader // Added Loader and AlertTriangle\r\n} from 'lucide-react'; // Using lucide-react as provided\r\nimport './EventBooking.css'; // We will update this file\r\n\r\nconst EventBooking = () => {\r\n    const [formData, setFormData] = useState({\r\n        club_name: '', // Fetch dynamically\r\n        event_name: '',\r\n        event_date: '',\r\n        time_slots: [],\r\n        room_number: '',\r\n        std_reg: '',\r\n        event_details: '',\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    const [submitLoading, setSubmitLoading] = useState(false); // Loading state for submission\r\n    const [formError, setFormError] = useState(''); // State for inline form errors\r\n    const [formSuccess, setFormSuccess] = useState(''); // State for success message\r\n\r\n    // Available time slots and room numbers (Keep as is)\r\n    const [availableTimeSlots] = useState([\r\n        '09:30 AM-10:50 AM', '11:00 AM-12:20 PM', '12:30 PM-01:50 PM',\r\n        '02:00 PM - 03:20 PM', '03:30 PM - 04:50 PM', '05:00 PM - 06:20 PM'\r\n    ]);\r\n    const roomNumbers = [\r\n        '12B-30L', '12B-31L', '12D-26L', '12D-27L', '12D-28L',\r\n        'Club Room 1', 'Club Room 2', 'Club Room 3', 'Club Room 4',\r\n        'Lecture Theatre 1', 'Lecture Theatre 2', 'Lecture Theatre 3',\r\n        'Multi Purpose Hall', 'Auditorium'\r\n    ];\r\n    const [minDate, setMinDate] = useState('');\r\n\r\n    // --- useEffect to fetch club name and set min date (Keep logic) ---\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        axios.get('http://localhost:3001/api/clubs/dashboard', { withCredentials: true })\r\n            .then(response => {\r\n                if (response.data.clubName) {\r\n                    setFormData(prev => ({ ...prev, club_name: response.data.clubName }));\r\n                } else {\r\n                    setFormData(prev => ({ ...prev, club_name: 'Default Club' })); // Fallback\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching club name:', error);\r\n                setFormData(prev => ({ ...prev, club_name: 'Error Loading Club' })); // Show error\r\n            })\r\n            .finally(() => setLoading(false));\r\n\r\n        const today = new Date();\r\n        today.setDate(today.getDate() + 5);\r\n        const minDateString = today.toISOString().split('T')[0];\r\n        setMinDate(minDateString);\r\n    }, []);\r\n\r\n    // --- Handlers (Keep logic, minor class adjustments if needed) ---\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prev) => ({ ...prev, [name]: value }));\r\n        // Clear messages on change\r\n        setFormError('');\r\n        setFormSuccess('');\r\n    };\r\n\r\n    const handleDateChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prev) => ({ ...prev, [name]: value }));\r\n         // Clear messages on change\r\n         setFormError('');\r\n         setFormSuccess('');\r\n    };\r\n\r\n    const handleTimeSlotChange = (slot) => {\r\n        setFormData(prev => {\r\n            let selectedSlots = prev.time_slots;\r\n            if (selectedSlots.includes(slot)) {\r\n                selectedSlots = selectedSlots.filter(s => s !== slot);\r\n            } else if (selectedSlots.length < 2) {\r\n                selectedSlots = [...selectedSlots, slot];\r\n            }\r\n             // Clear messages on change\r\n             setFormError('');\r\n             setFormSuccess('');\r\n            return { ...prev, time_slots: selectedSlots };\r\n        });\r\n    };\r\n\r\n    // --- Submit Handler (Keep logic, add loading and better feedback) ---\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setFormError(''); // Clear previous errors\r\n        setFormSuccess(''); // Clear previous success\r\n\r\n        const { event_name, event_date, time_slots, room_number, std_reg, event_details } = formData;\r\n        if (!event_name || !event_date || time_slots.length === 0 || !room_number || !std_reg || !event_details) {\r\n            setFormError('All fields marked with * are required.');\r\n            return;\r\n        }\r\n         if (event_date < minDate) {\r\n             setFormError('Event date must be at least 5 days from today.');\r\n             return;\r\n         }\r\n        if (time_slots.length > 2) { // Should be prevented by UI, but double-check\r\n            setFormError('You can select a maximum of two time slots.');\r\n            return;\r\n        }\r\n\r\n        setSubmitLoading(true); // Start submit loading\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:3001/api/events/booking', formData);\r\n            // Use state for success message instead of alert\r\n            setFormSuccess(`Booking Successful! Your Booking ID: ${response.data.bookingId}. The form has been reset.`);\r\n            // Reset form after successful submission\r\n            setFormData({\r\n                club_name: formData.club_name, // Keep club name\r\n                event_name: '', event_date: '', time_slots: [], room_number: '', std_reg: '', event_details: ''\r\n            });\r\n        } catch (error) {\r\n            console.error('Error while submitting event:', error);\r\n            // Use state for error message instead of alert\r\n            if (error.response && error.response.data.message) {\r\n                 setFormError(`Booking failed: ${error.response.data.message}`);\r\n            } else {\r\n                 setFormError('Booking failed. Please check the details or try again later.');\r\n            }\r\n        } finally {\r\n             setSubmitLoading(false); // Stop submit loading\r\n        }\r\n    };\r\n\r\n    // --- Initial Loading State ---\r\n    if (loading) {\r\n        return (\r\n            // Consistent loading style\r\n            <div className=\"loading-container\">\r\n                <Loader className=\"spinner\" size={40} /> Loading Booking Form...\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // --- Main Render ---\r\n    return (\r\n        <div className=\"booking-container\"> {/* Use consistent container class */}\r\n            <h2 className=\"form-heading\"> {/* Use consistent heading class */}\r\n                <Book size={32} className=\"heading-icon\" /> {/* Adjusted icon size */}\r\n                Book an Event\r\n            </h2>\r\n\r\n            {/* Form-level Messages */}\r\n            {formError && <div className=\"alert alert-error mb-4\"><AlertTriangle /> {formError}</div>}\r\n            {formSuccess && <div className=\"alert alert-success mb-4\"><CheckCircle /> {formSuccess}</div>}\r\n\r\n            <form onSubmit={handleSubmit} className=\"booking-form\"> {/* Consistent form class */}\r\n\r\n                {/* Club Name (Read Only) */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"club_name\">\r\n                        <Users size={18} className=\"label-icon\" /> Club Name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"club_name\"\r\n                        name=\"club_name\"\r\n                        value={formData.club_name}\r\n                        readOnly\r\n                        className=\"form-input readonly\" // Specific class for readonly\r\n                    />\r\n                </div>\r\n\r\n                {/* Event Name */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"event_name\">\r\n                        <FileText size={18} className=\"label-icon\" /> Event Name <span className=\"required-star\">*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"event_name\"\r\n                        name=\"event_name\"\r\n                        value={formData.event_name}\r\n                        onChange={handleChange}\r\n                        required\r\n                        className=\"form-input\"\r\n                        placeholder=\"e.g., Annual Tech Fest\"\r\n                    />\r\n                </div>\r\n\r\n                {/* Event Date */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"event_date\">\r\n                        <Calendar size={18} className=\"label-icon\" /> Event Date <span className=\"required-star\">*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"event_date\"\r\n                        name=\"event_date\"\r\n                        value={formData.event_date}\r\n                        onChange={handleDateChange}\r\n                        required\r\n                        min={minDate}\r\n                        className=\"form-input\"\r\n                    />\r\n                    {/* Inline validation message styling */}\r\n                    {formData.event_date && formData.event_date < minDate && (\r\n                        <p className=\"inline-error-message\">\r\n                            <Info size={14} /> Event date must be at least 5 days from today.\r\n                        </p>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Time Slots */}\r\n                <div className=\"form-group\">\r\n                    <label>\r\n                        <Clock size={18} className=\"label-icon\" /> Time Slot(s) (Max 2) <span className=\"required-star\">*</span>\r\n                    </label>\r\n                    <div className=\"time-slots-container\">\r\n                        {availableTimeSlots.map(slot => (\r\n                            <button\r\n                                key={slot}\r\n                                type=\"button\"\r\n                                // Apply dynamic classes based on state\r\n                                className={`time-slot-button ${formData.time_slots.includes(slot) ? 'selected' : ''} ${formData.time_slots.length >= 2 && !formData.time_slots.includes(slot) ? 'disabled' : ''}`}\r\n                                onClick={() => handleTimeSlotChange(slot)}\r\n                                // Disable button if max slots reached and this one isn't selected\r\n                                disabled={formData.time_slots.length >= 2 && !formData.time_slots.includes(slot)}\r\n                            >\r\n                                {slot}\r\n                                {formData.time_slots.includes(slot) && <CheckCircle size={16} className=\"slot-icon\" />}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                    {/* Helper text for selected slots */}\r\n                    {formData.time_slots.length > 0 && (\r\n                        <p className=\"helper-text mt-2\">\r\n                            Selected: {formData.time_slots.join(', ')}\r\n                        </p>\r\n                    )}\r\n                     {/* Helper text for max slots */}\r\n                    {formData.time_slots.length >= 2 && (\r\n                        <p className=\"helper-text-warning mt-1\">\r\n                            <Info size={14} /> Maximum two time slots reached.\r\n                        </p>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Room Number */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"room_number\">\r\n                        <MapPin size={18} className=\"label-icon\" /> Room/Venue <span className=\"required-star\">*</span>\r\n                    </label>\r\n                    <select\r\n                        id=\"room_number\"\r\n                        name=\"room_number\"\r\n                        value={formData.room_number}\r\n                        onChange={handleChange}\r\n                        required\r\n                        className=\"form-select\" // Use consistent select class\r\n                    >\r\n                        <option value=\"\" disabled>-- Select a Room or Venue --</option>\r\n                        {roomNumbers.map(room => (\r\n                            <option key={room} value={room}>{room}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                {/* Student Registration */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"std_reg\">\r\n                        <Users size={18} className=\"label-icon\" /> Student Registration Required? <span className=\"required-star\">*</span>\r\n                    </label>\r\n                    <select\r\n                        id=\"std_reg\"\r\n                        name=\"std_reg\"\r\n                        value={formData.std_reg}\r\n                        onChange={handleChange}\r\n                        required\r\n                        className=\"form-select\"\r\n                    >\r\n                        <option value=\"\" disabled>-- Select Yes or No --</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* Event Description */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"event_details\">\r\n                        <FileText size={18} className=\"label-icon\" /> Event Description <span className=\"required-star\">*</span>\r\n                    </label>\r\n                    <textarea\r\n                        id=\"event_details\"\r\n                        name=\"event_details\"\r\n                        rows=\"5\"\r\n                        value={formData.event_details}\r\n                        onChange={handleChange}\r\n                        required\r\n                        className=\"form-input\" // Use consistent input class\r\n                        placeholder=\"Briefly describe the event, purpose, expected audience, etc.\"\r\n                    ></textarea>\r\n                </div>\r\n\r\n                {/* Submit Button */}\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary submit-btn\" // Use consistent button classes\r\n                    disabled={submitLoading} // Disable while submitting\r\n                >\r\n                    {submitLoading ? (\r\n                        <><Loader size={20} className=\"spinner mr-2\" /> Submitting...</>\r\n                    ) : (\r\n                        <><CheckCircle size={20} /> Submit Booking Request</>\r\n                    )}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventBooking;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}